//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 20 2017 17:44:06).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIKit.h>
//
//#import "EGORefreshTableHeaderDelegate-Protocol.h"
//#import "MyProfileStoryCellDelegate-Protocol.h"
//#import "SCAddFriendCellDelegate-Protocol.h"
//#import "SCAlertGearDelegate-Protocol.h"
//#import "SCBugReportViewControllerDataSource-Protocol.h"
//#import "SCCardController-Protocol.h"
//#import "SCCardStyling-Protocol.h"
//#import "SCContactsCTAFooterViewDelegate-Protocol.h"
//#import "SCDynamicSectionsManagerDelegate-Protocol.h"
//#import "SCFriendProfileCellViewDelegate-Protocol.h"
//#import "SCHorizontalStoriesControllerDelegate-Protocol.h"
//#import "SCMiniProfileViewControllerDelegate-Protocol.h"
//#import "SCMyStoriesTableViewControllerDelegate-Protocol.h"
//#import "SCOperaPresenterDelegate-Protocol.h"
//#import "SCOverscrollableController-Protocol.h"
//#import "SCPromotedStoriesManagerDelegate-Protocol.h"
//#import "SCPublicContentMiniProfileControllerDelegate-Protocol.h"
//#import "SCPullToRefreshViewDelegate-Protocol.h"
//#import "SCQuickAddControllerDataSrouce-Protocol.h"
//#import "SCQuickAddControllerDelegate-Protocol.h"
//#import "SCSearchContentScrollViewProviding-Protocol.h"
//#import "SCSearchContentViewControlling-Protocol.h"
//#import "SCSearchUpdateListener-Protocol.h"
//#import "SCStoriesContentViewControlling-Protocol.h"
//#import "SCStoriesModelUpdateListener-Protocol.h"
//#import "SCStoriesPage-Protocol.h"
//#import "SCStoriesPlaylistManagerDelegate-Protocol.h"
//#import "SCTableIndexDelegate-Protocol.h"
//#import "SCTilesFilterDelegate-Protocol.h"
//#import "SCTimeProfilable-Protocol.h"
//#import "SCTwoRowsTilesControllerDelegate-Protocol.h"
//#import "SendSnapNavigationControllerDelegate-Protocol.h"
//#import "SendTextControllerDelegate-Protocol.h"
//#import "StoriesCellDelegate-Protocol.h"
//#import "SwipeView-Protocol.h"
//#import "UIGestureRecognizerDelegate-Protocol.h"
//#import "UIScrollViewDelegate-Protocol.h"
//#import "UITableViewDataSource-Protocol.h"
//#import "UITableViewDelegate-Protocol.h"
//#import "UITextFieldDelegate-Protocol.h"
//
//@class AddFriendsDelegateObject, EGORefreshTableHeaderView, FBKVOController, Friend, NSArray, NSDictionary, NSIndexPath, NSMutableDictionary, NSMutableSet, NSString, SCAlertGear, SCCardContainerView, SCCardGradientView, SCContactsCTAFooterView, SCContextOperaPlaylistPlugin, SCDynamicSectionsManager, SCFriendLongPressGestureRecognizer, SCGradientView, SCHovaTabBarView, SCMiniProfileViewController, SCMyStoriesTableViewController, SCOperaPerformanceTrackingPlugin, SCOperaPlaylistCameraPlugin, SCOperaPlaylistCommercePlugin, SCOperaPlaylistEditionsPlugin, SCOperaPlaylistNotificationOptInPlugin, SCOperaPlaylistStoriesPlugin, SCOperaPresenter, SCPreviewTooltipBalloon, SCPublicContentMiniProfileController, SCPullToRefreshBackgroundRenderView, SCPullToRefreshView, SCQuickAddController, SCScrollPositionRetentionStrategy, SCSearchContentViewControllerContext, SCStoriesCellTextRotationController, SCStoriesPageSession, SCStoriesPageViewSession, SCStoriesPlaylistManager, SCStoriesReplayManager, SCTableIndexController, SCUserSession, SCViewControllerTransitionAnimator, Story, UIImageView, UILongPressGestureRecognizer, UIScrollView, UITableView, UITapGestureRecognizer;
//@protocol NavigationDelegate, SCDynamicSection, SCHovaOverscrollDelegate, SCReplyDelegate, SCStartChatDelegate, SCStoriesContentViewControllingDelegate, SCStoriesSelectableCell, SCStoriesViewControllerDelegate, SCSwipeViewParentDelegate><SCViewingMediaDelegate, SendSnapNavigationControllerDelegate, UIScrollViewDelegate;

@interface SCStoriesViewController : UIViewController
//<SCStoriesModelUpdateListener, SCTableIndexDelegate, SCStoriesPage, UITextFieldDelegate, UITableViewDelegate, UITableViewDataSource, UIScrollViewDelegate, SendTextControllerDelegate, UIGestureRecognizerDelegate, EGORefreshTableHeaderDelegate, StoriesCellDelegate, MyProfileStoryCellDelegate, SCFriendProfileCellViewDelegate, SCAddFriendCellDelegate, SCTimeProfilable, SCAlertGearDelegate, SCPublicContentMiniProfileControllerDelegate, SCTilesFilterDelegate, SCDynamicSectionsManagerDelegate, SendSnapNavigationControllerDelegate, SCPullToRefreshViewDelegate, SCCardController, SCQuickAddControllerDelegate, SCStoriesPlaylistManagerDelegate, SCMyStoriesTableViewControllerDelegate, SCBugReportViewControllerDataSource, SCOperaPresenterDelegate, SCQuickAddControllerDataSrouce, SCSearchUpdateListener, SCTwoRowsTilesControllerDelegate, SCHorizontalStoriesControllerDelegate, SCMiniProfileViewControllerDelegate, SCPromotedStoriesManagerDelegate, SwipeView, SCCardStyling, SCContactsCTAFooterViewDelegate, SCOverscrollableController, SCSearchContentScrollViewProviding, SCSearchContentViewControlling, SCStoriesContentViewControlling>
//{
//    SCContactsCTAFooterView *_addContactsFooter;
//    SCUserSession *_userSession;
//    SCMiniProfileViewController *_miniProfileViewController;
//    SCQuickAddController *_quickAddController;
//    UILongPressGestureRecognizer *_pressedStateRecognizer;
//    _Bool _userStoriesOnly;
//    _Bool _setPullToDismissStartedSelectionState;
//    _Bool _didUpdateLocation;
//    NSIndexPath *_currentIndexPath;
//    NSMutableSet *_reusableStoriesViewHeaders;
//    AddFriendsDelegateObject *_addFriendsController;
//    SCStoriesCellTextRotationController *_textRotationController;
//    NSMutableSet *_friendStoriesKVOedNameSet;
//    NSDictionary *_sectionsMap;
//    SCMyStoriesTableViewController *_myStoriesTableViewController;
//    _Bool _presentingStoryFromMyStoriesTableViewController;
//    _Bool _shouldScrollAfterEditDisplayName;
//    SCStoriesPageSession *_currentPageSession;
//    _Bool _isLongpressing;
//    _Bool _createGroupStoryEnabled;
//    SCPreviewTooltipBalloon *_groupStoryOnboardingTooltip;
//    SCOperaPresenter *_operaPresenter;
//    SCOperaPlaylistEditionsPlugin *_editionsPlugin;
//    SCOperaPlaylistStoriesPlugin *_storiesPlugin;
//    SCOperaPerformanceTrackingPlugin *_performanceTrackingPlugin;
//    SCOperaPlaylistCommercePlugin *_commercePlugin;
//    SCOperaPlaylistCameraPlugin *_cameraPlugin;
//    SCOperaPlaylistNotificationOptInPlugin *_notificationOptInPlugin;
//    SCContextOperaPlaylistPlugin *_contextPlugin;
//    SCScrollPositionRetentionStrategy *_scrollPosition;
//    _Bool _didDoubleTapToReply;
//    _Bool _didLaunchFromWarmStart;
//    _Bool _reloading;
//    _Bool _firstFetchUpdatesRequest;
//    _Bool _didLogFirstRecentUpdateReady;
//    _Bool _isShowingFullyViewedAnimation;
//    _Bool _animatingStoryFromTile;
//    _Bool _isTogglingCell;
//    _Bool _didClearAllTileImages;
//    _Bool _openContentFromMiniProfile;
//    _Bool _didUpdateStories;
//    _Bool _enableTableViewOptimization;
//    _Bool _showOfficialStoriesSection;
//    _Bool _enableScrubberPopupOverTiles;
//    _Bool _useFakeHeaderForScubberOverTiles;
//    id <UIScrollViewDelegate> _scrollingDelegate;
//    SCSearchContentViewControllerContext *_searchContentViewControllerContext;
//    id <SCStoriesContentViewControllingDelegate> _storiesContentViewControllerDelegate;
//    id <SCStoriesViewControllerDelegate> _delegate;
//    id <NavigationDelegate> _navigationDelegate;
//    id <SCReplyDelegate> _replyDelegate;
//    id <SCSwipeViewParentDelegate><SCViewingMediaDelegate> _parentDelegate;
//    id <SendSnapNavigationControllerDelegate> _sendSnapNavigationControllerDelegate;
//    id <SCStartChatDelegate> _startChatDelegate;
//    id <SCHovaOverscrollDelegate> _hovaOverscrollDelegate;
//    Friend *_editingFriend;
//    Friend *_friendBeingInvited;
//    long long _friendStoriesViewingType;
//    double _lastYOffsetBeforeScrolling;
//    UITapGestureRecognizer *_doubleTapGestureRecognizer;
//    SCFriendLongPressGestureRecognizer *_longPressGestureRecognizer;
//    UITapGestureRecognizer *_singleTapGestureRecognizer;
//    EGORefreshTableHeaderView *_refreshHeaderView;
//    SCPullToRefreshBackgroundRenderView *_refreshBackgroundRenderView;
//    SCPullToRefreshView *_cardRefreshHeaderView;
//    long long _sectionForExpandedStoriesGroup;
//    Friend *_selectedFriend;
//    SCTableIndexController *_storiesTableIndexController;
//    UITableView *_tableView;
//    UIImageView *_topDarkGradientView;
//    SCGradientView *_bottomLightGradientView;
//    UIImageView *_bottomDarkGradientView;
//    Story *_selectedMyStory;
//    FBKVOController *_observeController;
//    SCAlertGear *_alertGear;
//    long long _selectedUniqueCellDataId;
//    SCViewControllerTransitionAnimator *_tileTransitionAnimator;
//    NSString *_tappedItemId;
//    NSString *_tappedLoadingItemId;
//    UIViewController<SCDynamicSection> *_tappedDynamicSectionController;
//    UIViewController<SCDynamicSection> *_longPressedDynamicSectionController;
//    SCDynamicSectionsManager *_dynamicSectionsManager;
//    SCStoriesPageViewSession *_pageViewSession;
//    SCCardContainerView *_cardContainerView;
//    NSString *_recentAddedFriendName;
//    id <SCStoriesSelectableCell> _selectedCell;
//    NSArray *_sections;
//    NSArray *_dynamicTilesSections;
//    SCPublicContentMiniProfileController *_publicContentMiniProfileController;
//    SCStoriesPlaylistManager *_playlistManager;
//    SCStoriesReplayManager *_replayManager;
//    NSMutableDictionary *_dynamicTilesIndexToTruncatedHeader;
//    NSString *_upperCasedFeaturedTitle;
//    double _tilesScrubberHeaderMaxLength;
//    NSIndexPath *_longPressedIndexPathForMiniProfile;
//    NSArray *_darkSectionsRect;
//}
//
//+ (int)context;
//+ (id)pageViewName;
//@property(readonly, nonatomic) _Bool userStoriesOnly; // @synthesize userStoriesOnly=_userStoriesOnly;
//@property(retain, nonatomic) NSArray *darkSectionsRect; // @synthesize darkSectionsRect=_darkSectionsRect;
//@property(readonly, nonatomic) SCUserSession *userSession; // @synthesize userSession=_userSession;
//@property(retain, nonatomic) NSIndexPath *longPressedIndexPathForMiniProfile; // @synthesize longPressedIndexPathForMiniProfile=_longPressedIndexPathForMiniProfile;
//@property(nonatomic) double tilesScrubberHeaderMaxLength; // @synthesize tilesScrubberHeaderMaxLength=_tilesScrubberHeaderMaxLength;
//@property(copy, nonatomic) NSString *upperCasedFeaturedTitle; // @synthesize upperCasedFeaturedTitle=_upperCasedFeaturedTitle;
//@property(retain, nonatomic) NSMutableDictionary *dynamicTilesIndexToTruncatedHeader; // @synthesize dynamicTilesIndexToTruncatedHeader=_dynamicTilesIndexToTruncatedHeader;
//@property(nonatomic) _Bool useFakeHeaderForScubberOverTiles; // @synthesize useFakeHeaderForScubberOverTiles=_useFakeHeaderForScubberOverTiles;
//@property(nonatomic) _Bool enableScrubberPopupOverTiles; // @synthesize enableScrubberPopupOverTiles=_enableScrubberPopupOverTiles;
//@property(nonatomic) _Bool showOfficialStoriesSection; // @synthesize showOfficialStoriesSection=_showOfficialStoriesSection;
//@property(nonatomic) _Bool enableTableViewOptimization; // @synthesize enableTableViewOptimization=_enableTableViewOptimization;
//@property(retain, nonatomic) SCStoriesReplayManager *replayManager; // @synthesize replayManager=_replayManager;
//@property(retain, nonatomic) SCStoriesPlaylistManager *playlistManager; // @synthesize playlistManager=_playlistManager;
//@property(nonatomic) _Bool didUpdateStories; // @synthesize didUpdateStories=_didUpdateStories;
//@property(nonatomic) _Bool openContentFromMiniProfile; // @synthesize openContentFromMiniProfile=_openContentFromMiniProfile;
//@property(retain, nonatomic) SCPublicContentMiniProfileController *publicContentMiniProfileController; // @synthesize publicContentMiniProfileController=_publicContentMiniProfileController;
//@property(copy, nonatomic) NSArray *dynamicTilesSections; // @synthesize dynamicTilesSections=_dynamicTilesSections;
//@property(copy, nonatomic) NSArray *sections; // @synthesize sections=_sections;
//@property(retain, nonatomic) id <SCStoriesSelectableCell> selectedCell; // @synthesize selectedCell=_selectedCell;
//@property(copy, nonatomic) NSString *recentAddedFriendName; // @synthesize recentAddedFriendName=_recentAddedFriendName;
//@property(retain, nonatomic) SCCardContainerView *cardContainerView; // @synthesize cardContainerView=_cardContainerView;
//@property(retain, nonatomic) SCStoriesPageViewSession *pageViewSession; // @synthesize pageViewSession=_pageViewSession;
//@property(nonatomic) _Bool didClearAllTileImages; // @synthesize didClearAllTileImages=_didClearAllTileImages;
//@property(retain, nonatomic) SCDynamicSectionsManager *dynamicSectionsManager; // @synthesize dynamicSectionsManager=_dynamicSectionsManager;
//@property(nonatomic) _Bool isTogglingCell; // @synthesize isTogglingCell=_isTogglingCell;
//@property(retain, nonatomic) UIViewController<SCDynamicSection> *longPressedDynamicSectionController; // @synthesize longPressedDynamicSectionController=_longPressedDynamicSectionController;
//@property(retain, nonatomic) UIViewController<SCDynamicSection> *tappedDynamicSectionController; // @synthesize tappedDynamicSectionController=_tappedDynamicSectionController;
//@property(copy, nonatomic) NSString *tappedLoadingItemId; // @synthesize tappedLoadingItemId=_tappedLoadingItemId;
//@property(copy, nonatomic) NSString *tappedItemId; // @synthesize tappedItemId=_tappedItemId;
//@property(retain, nonatomic) SCViewControllerTransitionAnimator *tileTransitionAnimator; // @synthesize tileTransitionAnimator=_tileTransitionAnimator;
//@property(nonatomic) _Bool animatingStoryFromTile; // @synthesize animatingStoryFromTile=_animatingStoryFromTile;
//@property(nonatomic) _Bool isShowingFullyViewedAnimation; // @synthesize isShowingFullyViewedAnimation=_isShowingFullyViewedAnimation;
//@property(nonatomic) long long selectedUniqueCellDataId; // @synthesize selectedUniqueCellDataId=_selectedUniqueCellDataId;
//@property(retain, nonatomic) SCAlertGear *alertGear; // @synthesize alertGear=_alertGear;
//@property(retain, nonatomic) FBKVOController *observeController; // @synthesize observeController=_observeController;
//@property(retain, nonatomic) SCQuickAddController *quickAddController; // @synthesize quickAddController=_quickAddController;
//@property(nonatomic) _Bool didLogFirstRecentUpdateReady; // @synthesize didLogFirstRecentUpdateReady=_didLogFirstRecentUpdateReady;
//@property(nonatomic) _Bool firstFetchUpdatesRequest; // @synthesize firstFetchUpdatesRequest=_firstFetchUpdatesRequest;
//@property(retain, nonatomic) Story *selectedMyStory; // @synthesize selectedMyStory=_selectedMyStory;
//@property(retain, nonatomic) UIImageView *bottomDarkGradientView; // @synthesize bottomDarkGradientView=_bottomDarkGradientView;
//@property(retain, nonatomic) SCGradientView *bottomLightGradientView; // @synthesize bottomLightGradientView=_bottomLightGradientView;
//@property(retain, nonatomic) UIImageView *topDarkGradientView; // @synthesize topDarkGradientView=_topDarkGradientView;
//@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
//@property(retain, nonatomic) SCTableIndexController *storiesTableIndexController; // @synthesize storiesTableIndexController=_storiesTableIndexController;
//@property(retain, nonatomic) Friend *selectedFriend; // @synthesize selectedFriend=_selectedFriend;
//@property(nonatomic) long long sectionForExpandedStoriesGroup; // @synthesize sectionForExpandedStoriesGroup=_sectionForExpandedStoriesGroup;
//@property(nonatomic) _Bool reloading; // @synthesize reloading=_reloading;
//@property(retain, nonatomic) SCPullToRefreshView *cardRefreshHeaderView; // @synthesize cardRefreshHeaderView=_cardRefreshHeaderView;
//@property(retain, nonatomic) SCPullToRefreshBackgroundRenderView *refreshBackgroundRenderView; // @synthesize refreshBackgroundRenderView=_refreshBackgroundRenderView;
//@property(retain, nonatomic) EGORefreshTableHeaderView *refreshHeaderView; // @synthesize refreshHeaderView=_refreshHeaderView;
//@property(retain, nonatomic) UITapGestureRecognizer *singleTapGestureRecognizer; // @synthesize singleTapGestureRecognizer=_singleTapGestureRecognizer;
//@property(retain, nonatomic) SCFriendLongPressGestureRecognizer *longPressGestureRecognizer; // @synthesize longPressGestureRecognizer=_longPressGestureRecognizer;
//@property(retain, nonatomic) UITapGestureRecognizer *doubleTapGestureRecognizer; // @synthesize doubleTapGestureRecognizer=_doubleTapGestureRecognizer;
//@property(nonatomic) double lastYOffsetBeforeScrolling; // @synthesize lastYOffsetBeforeScrolling=_lastYOffsetBeforeScrolling;
//@property(nonatomic) long long friendStoriesViewingType; // @synthesize friendStoriesViewingType=_friendStoriesViewingType;
//@property(retain, nonatomic) Friend *friendBeingInvited; // @synthesize friendBeingInvited=_friendBeingInvited;
//@property(retain, nonatomic) Friend *editingFriend; // @synthesize editingFriend=_editingFriend;
//@property(nonatomic) _Bool didLaunchFromWarmStart; // @synthesize didLaunchFromWarmStart=_didLaunchFromWarmStart;
//@property(nonatomic) _Bool didDoubleTapToReply; // @synthesize didDoubleTapToReply=_didDoubleTapToReply;
//@property(nonatomic) __weak id <SCHovaOverscrollDelegate> hovaOverscrollDelegate; // @synthesize hovaOverscrollDelegate=_hovaOverscrollDelegate;
//@property(nonatomic) __weak id <SCStartChatDelegate> startChatDelegate; // @synthesize startChatDelegate=_startChatDelegate;
//@property(nonatomic) __weak id <SendSnapNavigationControllerDelegate> sendSnapNavigationControllerDelegate; // @synthesize sendSnapNavigationControllerDelegate=_sendSnapNavigationControllerDelegate;
//@property(nonatomic) __weak id <SCSwipeViewParentDelegate><SCViewingMediaDelegate> parentDelegate; // @synthesize parentDelegate=_parentDelegate;
//@property(nonatomic) __weak id <SCReplyDelegate> replyDelegate; // @synthesize replyDelegate=_replyDelegate;
//@property(nonatomic) __weak id <NavigationDelegate> navigationDelegate; // @synthesize navigationDelegate=_navigationDelegate;
//@property(nonatomic) __weak id <SCStoriesViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
//@property(nonatomic) __weak id <SCStoriesContentViewControllingDelegate> storiesContentViewControllerDelegate; // @synthesize storiesContentViewControllerDelegate=_storiesContentViewControllerDelegate;
//@property(retain, nonatomic) SCSearchContentViewControllerContext *searchContentViewControllerContext; // @synthesize searchContentViewControllerContext=_searchContentViewControllerContext;
//@property(nonatomic) __weak id <UIScrollViewDelegate> scrollingDelegate; // @synthesize scrollingDelegate=_scrollingDelegate;
//- (void).cxx_destruct;
//@property(readonly, nonatomic) UIScrollView *contentScrollView;
//- (_Bool)_isPresentingStories;
//- (_Bool)_isPresentingEdition;
//- (id)sc_tabBarItem;
//- (unsigned long long)sc_tabBarItemPosition;
//- (id)sc_swipeTransitionBlurEffect;
//- (id)sc_swipeTransitionGradientColors;
//- (void)didSelectDiscoverButton:(id)arg1;
//- (void)didSelectProfileButton:(id)arg1;
//- (void)_updateGroupStoryTooltipIfNecessaryAnimated:(_Bool)arg1 visible:(_Bool)arg2;
//- (void)_handleTapOnTooltip;
//- (void)_initGroupStoryOnboardingTooltip;
//- (void)_displayGroupStoryTooltipIfNecessary;
//- (void)_setRightBarButtonItem;
//- (id)sc_navigationItem;
//- (void)_updateCurrentPageSessionAfterPresentingStory;
//- (void)didUpdateWithAnnouncerIdentifier:(id)arg1;
//- (void)didFinishViewingStoryInMyStoriesTableViewController:(id)arg1;
//- (void)willPresentStoryInMyStoriesTableViewController:(id)arg1;
//- (void)didPressExpandMyStoryButtonWithMyStoriesTableViewController:(id)arg1;
//- (void)didChangedMyStoriesArrayWithMyStoriesTableViewController:(id)arg1;
//- (id)presentingViewControllerForMyStoriesTableViewController:(id)arg1;
//- (void)myStoriesChangedInMyStoriesTableViewController:(id)arg1;
//- (void)didFinishExpandingViewAllInMyStoriesTableViewController:(id)arg1;
//- (void)willExpandAllInMyStoriesTableViewController:(id)arg1;
//- (void)overscrollWithContentOffset:(double)arg1 overscrollPercent:(double)arg2;
//- (void)addContactsButtonClicked:(_Bool)arg1 skipPhoneVerification:(_Bool)arg2;
//- (void)_presentPlaylistOnboardingDialog;
//- (id)_recentUpdateStoriesCellForKvoUsername:(id)arg1 visibleOnly:(_Bool)arg2;
//- (void)_playFriendList:(id)arg1 playSource:(long long)arg2 viewingType:(long long)arg3;
//- (void)didTapPlaylistButton;
//- (void)playlistManager:(id)arg1 didUpdateFriendStoriesWithKvoUsername:(id)arg2 playlistSelectedState:(_Bool)arg3;
//- (void)playlistManager:(id)arg1 playlistDidBecomeAvailable:(_Bool)arg2;
//- (void)_clearHovaStoryBadgeCount;
//- (void)_updateSeenRecentUpdateCellIds;
//- (void)endPageView;
//- (void)startPageView;
//- (long long)_getAddSourceTypeForFriend:(id)arg1;
//- (void)miniProfileViewControllerDidPressSnapButton:(id)arg1;
//- (void)miniProfileViewControllerDidPressSettingsButton:(id)arg1;
//- (void)miniProfileController:(id)arg1 wantsToNavigateToChatWithDeepLinkURL:(id)arg2;
//- (_Bool)isTilesCollectionVCFullyVisible:(id)arg1;
//- (void)_cancelTappedLoadingItemWithReason:(id)arg1;
//- (void)_presentLoadedOfficialStoriesWithController:(id)arg1 friendStories:(id)arg2 kvoUsername:(id)arg3 allKvoUsernames:(id)arg4 sourceView:(id)arg5 storyIndex:(long long)arg6;
//- (void)_didBlockFriend:(id)arg1;
//- (void)horizStoriesController:(id)arg1 willDisplayStoryWithKVOUsername:(id)arg2;
//- (void)horizStoriesControllerWillHorizontalScroll:(id)arg1;
//- (_Bool)horizStoriesController:(id)arg1 isStoryRectViewibleOnScreen:(struct CGRect)arg2 forCollectionView:(id)arg3;
//- (void)horizStoriesController:(id)arg1 didLongPressKVOUsername:(id)arg2 username:(id)arg3 displayName:(id)arg4 userId:(id)arg5 friendMoji:(id)arg6 avatarId:(id)arg7 selfieId:(id)arg8 storyIndex:(long long)arg9;
//- (void)horizStoriesController:(id)arg1 didLoadKVOUsername:(id)arg2 allKvoUsernames:(id)arg3 sourceView:(id)arg4 storyIndex:(long long)arg5;
//- (void)horizStoriesController:(id)arg1 didTapKVOUsername:(id)arg2 allKvoUsernames:(id)arg3 sourceView:(id)arg4 storyIndex:(long long)arg5;
//- (void)didUpdateSponsoredSectionWithTiles:(id)arg1 shouldReloadPage:(_Bool)arg2;
//- (void)twoRowsTilesControllerWillHorizontalScroll:(id)arg1;
//- (_Bool)twoRowsTilesController:(id)arg1 isPromotedStoryTileViewible:(struct CGRect)arg2 forCollectionView:(id)arg3;
//- (_Bool)twoRowsTilesController:(id)arg1 isTileRectViewibleOnScreen:(struct CGRect)arg2 forCollectionView:(id)arg3;
//- (void)twoRowsTilesController:(id)arg1 didLongPressTileWithTileId:(id)arg2 tileSizeType:(long long)arg3 tileIndex:(long long)arg4 tileType:(unsigned long long)arg5;
//- (void)twoRowsTilesController:(id)arg1 didTapTileWithTileId:(id)arg2 sourceView:(id)arg3 tileSizeType:(long long)arg4 tileIndex:(long long)arg5 tileType:(unsigned long long)arg6;
//- (void)_presentPromotedStories:(id)arg1 viewingActionContext:(unsigned long long)arg2 viewLocation:(long long)arg3 viewLocationPosition:(unsigned long long)arg4 tileSizeType:(long long)arg5 collectionId:(id)arg6 collectionPos:(long long)arg7 collectionType:(long long)arg8 baseView:(id)arg9;
//- (void)_presentLiveStories:(id)arg1 viewingActionContext:(unsigned long long)arg2 viewLocation:(long long)arg3 viewLocationPosition:(unsigned long long)arg4 tileSizeType:(long long)arg5 collectionId:(id)arg6 collectionPos:(long long)arg7 collectionType:(long long)arg8 isCircleTransition:(_Bool)arg9 baseView:(id)arg10;
//- (void)didTapPublicationDetails:(id)arg1;
//- (void)didTapLeavePublication:(id)arg1;
//- (void)didTapWatchButtonWithPublicContentMiniProfileDataEntry:(id)arg1;
//- (void)_publicContentMiniProfile:(id)arg1 didTapSubscriptionButtonWithEntry:(id)arg2;
//- (void)publicContentMiniProfile:(id)arg1 didTapButtonWithEntry:(id)arg2;
//- (void)publicContentMiniProfileDidTapHideStory:(id)arg1;
//- (void)didDismissPublicContentMiniProfile;
//- (void)_presentMiniProfileForMischiefPublication:(id)arg1;
//- (void)_presentMiniProfileForPublication:(id)arg1;
//- (void)_presentMiniprofileForChannel:(id)arg1 collectionId:(id)arg2 collectionPos:(long long)arg3 collectionType:(long long)arg4;
//- (void)_dismissMiniProfile:(id)arg1;
//- (void)_presentMiniProfile:(id)arg1 viewLocation:(long long)arg2 shouldScrollAfterEdit:(_Bool)arg3 addSource:(long long)arg4;
//- (void)_presentMiniProfile:(id)arg1 viewLocation:(long long)arg2 shouldScrollAfterEdit:(_Bool)arg3;
//- (id)_operaPresentingViewController;
//- (id)presentingVC;
//- (void)_presentPublicContentMiniProfileWithDataEntry:(id)arg1 openContext:(unsigned long long)arg2 cellLayer:(id)arg3 cellOrigin:(struct CGPoint)arg4 contentIndex:(unsigned long long)arg5 tileId:(id)arg6 tileSize:(long long)arg7 tileCoverId:(id)arg8 tilesController:(id)arg9 collectionId:(id)arg10 collectionPos:(long long)arg11 collectionType:(long long)arg12 viewLocation:(long long)arg13 profileType:(long long)arg14;
//- (void)_showPullToDismissCellAnimation;
//- (void)updateCellsSelectionStateForPullToDismiss;
//- (_Bool)_isCellUnderneathHova:(id)arg1;
//- (void)_scrollToNextAvailableCellIfNecessary;
//- (id)_singleIconViewWithUniqueCellDataId:(long long)arg1;
//- (void)_updatePullToDismissInfo;
//- (_Bool)viewingStory;
//- (id)_currentDiscoverEditionDisplaying;
//- (id)_currentFriendStoriesDisplaying;
//- (void)operaPresenter:(id)arg1 didFinishViewingPlaylistGroupDataModel:(id)arg2 nextGroupDataModel:(id)arg3;
//- (void)operaPresenter:(id)arg1 didBeginPlayingPlaylistGroupDataModel:(id)arg2;
//- (void)operaPresenterDidTearDown:(id)arg1;
//- (void)operaPresenterDidFinishDismissing:(id)arg1;
//- (void)operaPresenterDidFailToPresent:(id)arg1;
//- (void)operaPresenterWillBeginAnimatingToDismiss:(id)arg1;
//- (void)operaPresenterDidCancelDismissing:(id)arg1;
//- (void)operaPresenterWillBeginDismissing:(id)arg1 transitionAnimator:(id)arg2;
//- (void)operaPresenterDidFinishPresenting:(id)arg1 transitionAnimator:(id)arg2;
//- (void)operaPresenterWillBeginPresenting:(id)arg1 transitionAnimator:(id)arg2;
//- (_Bool)_shouldKeepFriendStories:(id)arg1 forViewingType:(long long)arg2;
//- (id)_adjustedFriendKvoNameList:(id)arg1 initialFriendKvoName:(id)arg2 viewingType:(long long)arg3;
//- (void)_presentWithFriendStories:(id)arg1 firstStoryToDisplay:(id)arg2 story:(id)arg3 friendKvoName:(id)arg4 friendKvoNameList:(id)arg5 viewingType:(long long)arg6 viewLocation:(long long)arg7 viewLocationPosition:(unsigned long long)arg8 tileSizeType:(long long)arg9 collectionId:(id)arg10 collectionPos:(long long)arg11 collectionType:(long long)arg12 viewingActionContext:(unsigned long long)arg13 animationStyle:(unsigned long long)arg14 baseView:(id)arg15 showViewersTable:(_Bool)arg16 unarchiveBeforePresenting:(_Bool)arg17 fallBackOnLoadingView:(_Bool)arg18 storyPlayMode:(long long)arg19 playSource:(long long)arg20;
//- (void)_presentChannel:(id)arg1 channelIndex:(unsigned long long)arg2 tileSizeType:(long long)arg3 collectionId:(id)arg4 collectionType:(long long)arg5 collectionPosition:(long long)arg6 baseView:(id)arg7 viewLocation:(long long)arg8 animationStyle:(unsigned long long)arg9;
//- (void)didUpdateCollectionEntriesWithDynamicSectionsManager:(id)arg1;
//- (void)tilesFilter:(id)arg1 didUpdateFilteredTiles:(id)arg2 fromTilesUpdateOnly:(_Bool)arg3;
//- (void)_didFinishPresentingTile;
//- (id)_addFriendsContext;
//- (void)pullToRefresh:(id)arg1 percentPulledDidChange:(double)arg2;
//- (void)pullToRefresh:(id)arg1 refreshStateDidChange:(long long)arg2;
//- (_Bool)pullToRefreshIsDataSourceLoading:(id)arg1;
//- (_Bool)pullToRefreshShouldRefresh:(id)arg1;
//- (_Bool)egoRefreshTableHeaderDataSourceIsLoading:(id)arg1;
//- (void)egoRefreshTableHeaderDidTriggerRefresh:(id)arg1;
//- (void)_refreshTableView;
//- (void)didPullToRefresh;
//@property(readonly, nonatomic) float tabBarPercentDarkMode;
//- (id)_currentDarkSectionRect;
//- (void)refreshStateDidChange:(long long)arg1;
//@property(readonly, nonatomic) _Bool isViewingStory;
//- (_Bool)isLoading;
//- (void)refresh;
//- (void)_dismissPreviewIfPresented;
//- (void)didPostStory;
//- (void)didSendSnaps:(id)arg1;
//- (void)didCancelFromPreview:(id)arg1;
//- (void)friendProfileCellView:(id)arg1 addFriendPressed:(id)arg2 friend:(id)arg3;
//- (void)infoButtonPressed:(id)arg1 forFriend:(id)arg2;
//- (void)sendInvitesToFriend:(id)arg1;
//- (void)didSelectAddFriendCell:(id)arg1;
//- (void)alertGear:(id)arg1 didSetDisplay:(id)arg2 friend:(id)arg3 shouldScroll:(_Bool)arg4;
//- (void)customOperationForHideStory:(id)arg1;
//- (void)customOperationForReport:(id)arg1;
//- (void)customOperationForUnBlock:(id)arg1;
//- (void)customOperationForBlock:(id)arg1 blockReasonId:(id)arg2;
//- (void)customOperationForDeleteorIgnore:(id)arg1;
//- (void)customOperationForEditName:(id)arg1;
//- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
//- (id)getHeaderTextForSection:(long long)arg1;
//- (_Bool)shouldHaveHeaderForSection:(long long)arg1;
//- (void)tableView:(id)arg1 didEndDisplayingHeaderView:(id)arg2 forSection:(long long)arg3;
//- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
//- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
//- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
//- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
//- (void)didTapThumbnailForIndexPath:(id)arg1;
//- (void)myContributionStoryInfoPressedForStoriesCell:(id)arg1;
//- (void)showPhotoAccessDeniedAlertView;
//- (void)savePressedForMyStories:(id)arg1;
//- (void)replyButtonPressedForFriend:(id)arg1 replyType:(long long)arg2 isDoubleTap:(_Bool)arg3;
//- (void)handleDidSelectMyProfileCellAtIndexPath:(id)arg1;
//- (void)expandCellHelper:(id)arg1;
//- (void)addToStoryPressedForUsername:(id)arg1;
//- (void)didPressAddToStoryButton;
//- (void)myStorySettingButtonPressedForStoriesCell:(id)arg1;
//- (void)expandMyStoryButtonPressedForStoriesCell:(id)arg1;
//- (void)handleTableViewScrollUpdateForStory:(id)arg1;
//- (void)expandStoryHelper:(id)arg1;
//- (void)handleDidSelectMyContributionStoriesCellAtIndexPath:(id)arg1;
//- (void)handleDidSelectMyProfileCell;
//- (void)sendTextController:(id)arg1 completedWithStatus:(int)arg2;
//- (unsigned long long)sectionForMyContributionStories:(id)arg1;
//- (id)myContributionStoriesForSection:(unsigned long long)arg1;
//- (id)myContributionStoriesToDisplay;
//- (id)myContributionStoriesCollection;
//- (id)myStoriesGroupForStory:(id)arg1;
//- (void)myStoryPlayerItemDidReachEnd:(id)arg1;
//- (id)myStoriesArray;
//- (id)_cellForMyStory:(id)arg1;
//- (id)myStoryForIndexPath:(id)arg1;
//- (id)myStoryForPoint:(struct CGPoint)arg1;
//- (void)deletePressedForStory:(id)arg1;
//- (void)savePressedForStory:(id)arg1;
//- (_Bool)isMyStoriesExpandedForSection:(unsigned long long)arg1;
//- (void)_toggleMyStoriesSection:(long long)arg1;
//- (void)_showMyStoriesForSection:(long long)arg1 oldSection:(long long)arg2;
//- (id)storiesIndexPathsForUsername:(id)arg1 withKvoUsername:(id)arg2;
//- (unsigned long long)liveStoriesCount;
//- (_Bool)hasViewableFriendStories;
//- (_Bool)hasUnviewedFriendStories;
//- (_Bool)_hasRecentUpdateStories;
//- (_Bool)_hasOfficialStories;
//- (id)groupStoriesCollection;
//- (id)friendStoriesCollection;
//- (_Bool)gestureRecognizer:(id)arg1 isWithinTopOfCellAtIndexPath:(id)arg2;
//- (id)storiesForIndexPath:(id)arg1;
//- (id)friendForIndexPath:(id)arg1;
//- (id)myStoriesCell;
//- (id)indexPathForMyStories:(id)arg1;
//- (id)indexPathForMyProfile;
//- (id)indexPathForMyStory:(id)arg1;
//- (id)_indexPathForAllStoriesWithUsername:(id)arg1;
//- (id)indexPathForUnviewedFriendWithKvoName:(id)arg1;
//- (id)indexPathForFriendKvoName:(id)arg1;
//- (unsigned long long)_storiesSectionForIndexPathSection:(long long)arg1;
//- (void)updateSections;
//- (id)_sectionsTemplate;
//- (unsigned long long)addContactsCTASection;
//- (unsigned long long)quickAddSection;
//- (unsigned long long)allStoriesSection;
//- (unsigned long long)recentUpdatesSection;
//- (unsigned long long)officialStoriesSection;
//- (unsigned long long)myStoriesSection;
//- (void)_logViewForAddContactsCTA;
//- (_Bool)_shouldShowNewUserQuickAdd;
//- (_Bool)_shouldShowQuickAddSection;
//- (_Bool)shouldShowAddContactsCTA;
//- (_Bool)_isAddContactsCTASection:(long long)arg1;
//- (_Bool)_isQuickAddSection:(long long)arg1;
//- (_Bool)_hasAllStoriesSection;
//- (_Bool)isAllStoriesSection:(long long)arg1;
//- (_Bool)_shouldNotShowTilesSection;
//- (_Bool)_hasContentForDynamicSection:(long long)arg1;
//- (_Bool)_isDynamicSection:(long long)arg1;
//- (_Bool)_hasRecentUpdatesSection;
//- (_Bool)isRecentUpdatesSection:(long long)arg1;
//- (_Bool)_hasOfficialStoriesSection;
//- (_Bool)_isOfficialStoriesSection:(long long)arg1;
//- (_Bool)isNonStoryAtIndexPath:(id)arg1;
//- (id)_publicationForIndexPath:(id)arg1;
//- (_Bool)_isGroupStoriesIndexPath:(id)arg1;
//- (_Bool)_isUnviewedStoriesIndexPath:(id)arg1;
//- (_Bool)_isUserStoriesIndexPath:(id)arg1;
//- (_Bool)isFriendsStoriesIndexPath:(id)arg1;
//- (_Bool)_isStorySnapsIndexPath:(id)arg1;
//- (_Bool)_isMyStoriesTableIndexPath:(id)arg1;
//- (_Bool)_isMyContributionStoriesSection:(long long)arg1;
//- (_Bool)isMyContributionStoriesIndexPath:(id)arg1;
//- (_Bool)_isMyContributionStorySnapsIndexPath:(id)arg1;
//- (_Bool)_isMyStorySnapsIndexPath:(id)arg1;
//- (_Bool)isMyProfileIndexPath:(id)arg1;
//- (_Bool)isStoryWithMediaContextViewIndexPath:(id)arg1;
//- (id)hovaOverscrollScrollView;
//- (void)_scrollToTopWithAnimation:(_Bool)arg1;
//- (void)scrollViewDidEndScrolling:(id)arg1;
//- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
//- (void)scrollViewDidEndDecelerating:(id)arg1;
//- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
//- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
//- (void)scrollViewWillBeginDragging:(id)arg1;
//- (void)_playHapticFeedbackIfNecessary;
//- (void)scrollViewDidScroll:(id)arg1;
//- (id)_dynamicTilesSectionCellForIndexPath:(id)arg1;
//- (id)_addContactsCTACellForIndexPath:(id)arg1;
//- (id)_quickAddCellForIndexPath:(id)arg1 needsBottomBorder:(_Bool)arg2;
//- (id)_myFriendCellForIndexPath:(id)arg1;
//- (void)updateFriendStoriesCell:(id)arg1 friendStories:(id)arg2 atIndexPath:(id)arg3 fromModelUpdate:(_Bool)arg4 shouldLogStateChange:(_Bool)arg5;
//- (id)friendStoriesCellForIndexPath:(id)arg1;
//- (id)addressBookCellForIndexPath:(id)arg1;
//- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
//- (_Bool)_needsRightEdgeInsetFromIndexPath:(id)arg1;
//- (void)setupStoriesCell:(id)arg1 withIndexPath:(id)arg2;
//- (_Bool)_needsBottomBorderFromIndexPath:(id)arg1;
//- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
//- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
//- (long long)numberOfSectionsInTableView:(id)arg1;
//- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
//- (void)handleChangeToExpandedStoriesSection:(long long)arg1 oldIndex:(long long)arg2;
//- (void)handleChangeToSelectedFriend:(id)arg1 oldSelectedFriend:(id)arg2;
//- (void)updateAddContactsCTA;
//- (void)storiesDidFindAddressBookFriends:(id)arg1;
//- (void)didViewAllFriendStories:(id)arg1;
//- (void)_friendsDidChange:(id)arg1;
//- (void)_reloadFriends;
//- (void)_reloadPlaylist;
//- (void)_reloadQuickAddAsViewAppeared;
//- (void)reloadAllData;
//- (void)_didFetchStories:(id)arg1;
//- (long long)preferredStatusBarStyle;
//- (void)showStatusBar;
//- (void)_clearTapToReplyCellsExcept:(id)arg1;
//- (void)cleanUpViewingStoriesState;
//- (_Bool)_shouldPlayStoryWithAutoAdvanceForIndexPath:(id)arg1;
//- (void)_touchesBeganForFriendStoriesCellWithIndexPath:(id)arg1;
//- (void)_didTryToPresentStoryUsingOpera;
//- (id)_removeBlockedStoriesFromKvoFriendNames:(id)arg1 except:(id)arg2;
//- (void)_presentWithFriendKvoName:(id)arg1 viewingType:(long long)arg2 viewLocation:(long long)arg3 viewLocationPosition:(unsigned long long)arg4 transitionBaseView:(id)arg5;
//- (void)_presentWithStory:(id)arg1 showViewersTable:(_Bool)arg2 isCircleTransition:(_Bool)arg3 baseView:(id)arg4;
//- (void)_didTryToPlayNotReadyFriendStories:(id)arg1 viewingType:(long long)arg2 fromPlayList:(_Bool)arg3 viewLocation:(long long)arg4;
//- (void)touchesBeganForMyContributionStoriesCellAtIndex:(id)arg1;
//- (void)touchesBeganForMyProfileCell:(id)arg1;
//- (void)touchesBeganForExpandedStory:(id)arg1;
//- (void)viewersPressedInCell:(id)arg1 forMyStory:(id)arg2;
//- (_Bool)_tapToReplyCellShowingForIndexPath:(id)arg1;
//- (void)_didDoubleTapCell:(id)arg1;
//- (void)cancelScrollEvents;
//- (void)longPressHandlerTTV:(id)arg1 indexPath:(id)arg2 locationInView:(struct CGPoint)arg3;
//- (struct CGRect)thumbnailRectWithTableCell:(id)arg1;
//- (id)thumbnailLayerWithTableCell:(id)arg1;
//- (void)_enterMediaView:(id)arg1 indexPath:(id)arg2 locationInView:(struct CGPoint)arg3;
//- (void)longPress:(id)arg1;
//- (void)pressedStateHandler:(id)arg1;
//- (void)_didTapCell:(id)arg1;
//- (_Bool)shouldHandleThumbnailTapForIndexPath:(id)arg1 gestureRecognizer:(id)arg2;
//- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
//- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
//- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
//- (void)scrollToTopOnStoryPost;
//- (_Bool)hasOnlyOneFriendStoriesInRecentUpdate;
//- (_Bool)shouldScrollToTopOnExit;
//- (void)_clearExpiredAndViewedStories;
//- (void)didReceiveMemoryWarning;
//- (void)viewDidFullyAppear;
//- (void)viewDidPartiallyDisappear;
//- (void)viewDidAppearAtOffset:(double)arg1;
//- (void)viewDidPartiallyAppear;
//- (void)viewDidFullyDisappear;
//- (void)viewCanAppear;
//- (void)tabBarTriggeredWithAction:(long long)arg1;
//- (void)_createGroupStoryButtonPressed;
//- (void)_showDiscover:(id)arg1;
//- (void)statusBarTapped;
//- (void)prepareCellForStoryExitForIndexPath:(id)arg1;
//- (void)reloadTable;
//- (void)viewWillEnterForeground:(id)arg1;
//- (void)viewDidEnterBackground:(id)arg1;
//- (void)_clearCellSelectionWithAnimation:(_Bool)arg1;
//- (void)_dropCellSelectionInformation;
//- (void)resumePlayback;
//- (void)pausePlayback;
//- (void)applicationDidBecomeActive:(id)arg1;
//- (void)applicationWillResignActive:(id)arg1;
//- (void)dealloc;
//- (void)handleMediaServicesLostNotification:(id)arg1;
//- (void)handleMediaServicesResetNotification:(id)arg1;
//- (void)viewDidLoad;
//- (_Bool)_firstVisibleSectionHasHeader;
//- (_Bool)hasScrollBar;
//- (id)quickAddControllerParentViewController;
//- (id)replyParametersForName:(id)arg1;
//- (id)sendSnapNavigationControllerDelegateForQuickAddController;
//- (id)myStoriesSectionTableVC;
//- (void)initContactsCTAIfNecessary;
//- (void)_updatePreferredScreenEdgesDeferringSystemGestures;
//- (unsigned long long)preferredScreenEdgesDeferringSystemGestures;
//- (_Bool)prefersStatusBarHidden;
//- (double)timeBeforeReturningToCamera;
//- (_Bool)shouldPopToRootViewController;
//- (void)initGradientViews;
//- (void)viewWillLayoutSubviews;
//- (void)loadView;
//- (id)initWithUserSession:(id)arg1 userStoriesOnly:(_Bool)arg2;
//- (id)getPageViewName;
//- (void)_clearTileImagesOffscreenOnly:(_Bool)arg1;
//- (void)reloadAllClearedTilesSectionsOnForegroundIfNecessary;
//- (void)clearAllTileImagesInBackgroundState;
//- (void)clearOffscreenTileImages;
//- (void)reloadClearedTilesSections;
//- (void)dynamicTilesControllersViewDidAppear;
//- (void)setDynamicTilesSectionsUserInteractionEnabled:(_Bool)arg1;
//- (id)dynamicCollectionIdWithSection:(long long)arg1;
//- (id)dynamicSectionControllerForTableSection:(long long)arg1;
//- (long long)indexOfDynamicTilesSectionForSection:(long long)arg1;
//- (id)updatedDynamicTilesSections;
//- (long long)viewLocationWithTilesController:(id)arg1;
//- (_Bool)isLiveSection:(long long)arg1;
//- (void)updateLoggingData;
//- (void)logPromotedStoriesCellsInView;
//- (void)logCurrentStoryCells;
//- (void)updateContentSeenIdsForAllDynamicTilesSections;
//- (void)storiesModelDidUpdateWithParams:(id)arg1;
//- (void)didChangeFriendStoriesCollection;
//- (void)_updateCellsForFriendStories:(id)arg1 retries:(unsigned long long)arg2 shouldLogStateChange:(_Bool)arg3;
//- (void)didChangeKey:(id)arg1 toFriendStories:(id)arg2 change:(id)arg3;
//- (id)_indexPathForCurrentScrollBar;
//- (double)_tableIndexBottomOffsetForTabBarPadding;
//- (double)storiesSectionHeaderHeight;
//- (unsigned long long)topMostSection;
//- (double)_tableIndexTopSectionHeaderBottomYOffset;
//- (void)_updateStoriesTableIndexWithTileControllers;
//- (_Bool)_shouldShowStoriesTableIndex;
//- (double)tableIndexOffset;
//- (void)didFinishLongPressingTableIndex;
//- (void)getLabelTextWithCompletion:(CDUnknownBlockType)arg1;
//- (void)scrollToPercent:(double)arg1;
//- (void)updateStoriesTableIndexAnimated:(_Bool)arg1;
//- (void)setupStoriesTableIndexWithScrollView:(id)arg1;
//- (void)invalidateDarkModeRect;
//- (void)updateTabBarDarkMode;
//@property(readonly, nonatomic) SCHovaTabBarView *hovaTabBarView;
//
//// Remaining properties
//@property(retain, nonatomic) SCCardGradientView *cardGradientView;
//@property(readonly, copy) NSString *debugDescription;
//@property(readonly, copy) NSString *description;
//@property(readonly) unsigned long long hash;
//@property(readonly) Class superclass;

@end

