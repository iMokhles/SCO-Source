//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIKit.h>
#import "SCPreviewToolBar.h"
#import "SCPreviewConfiguration.h"
//
//#import "SCAudioToolsDrawerDelegate-Protocol.h"
//#import "SCBitmojiPasteDelegate-Protocol.h"
//#import "SCCaptionManagerDelegate-Protocol.h"
//#import "SCChatStickerManagerListener-Protocol.h"
//#import "SCCraftControllerDelegate-Protocol.h"
//#import "SCCropOverlayViewListener-Protocol.h"
//#import "SCCustomStickerControllerDelegate-Protocol.h"
//#import "SCCustomStickerManagerListener-Protocol.h"
//#import "SCGalleryInformationWebViewControllerDelegate-Protocol.h"
//#import "SCGroupMiniProfileViewControllerDelegate-Protocol.h"
//#import "SCGrowingButtonDebugDelegate-Protocol.h"
//#import "SCLensPreviewViewControllerDelegate-Protocol.h"
//#import "SCMagicToolsBaseControllerDelegate-Protocol.h"
//#import "SCMagicToolsDelegate-Protocol.h"
//#import "SCMiniProfileViewControllerDelegate-Protocol.h"
//#import "SCModalPresentation-Protocol.h"
//#import "SCMotionManagerListener-Protocol.h"
//#import "SCMultiSnapCollectionViewControllerDelegate-Protocol.h"
//#import "SCMultiSnapV2CollectionViewControllerDelegate-Protocol.h"
//#import "SCMusicPickerViewControllerDelegate-Protocol.h"
//#import "SCOperaSilentlyPresentedProtocol-Protocol.h"
//#import "SCPixelationMaskStrokeDrawerDelegate-Protocol.h"
//#import "SCPreviewCaptionToolBarButtonItemDelegate-Protocol.h"
//#import "SCPreviewDependencyLoadingStatesDelegate-Protocol.h"
//#import "SCPreviewDrawingToolBarButtonItemDelegate-Protocol.h"
//#import "SCPreviewFilterDataProviderDelegate-Protocol.h"
//#import "SCPreviewFilterStackingUIHelperDelegate-Protocol.h"
//#import "SCPreviewMultiCaptionManagerDelegate-Protocol.h"
//#import "SCPreviewScannerDelegate-Protocol.h"
//#import "SCPreviewScissorsToolBarButtonItemDelegate-Protocol.h"
//#import "SCPreviewToolBarDelegate-Protocol.h"
//#import "SCPromptFilterViewDelegate-Protocol.h"
//#import "SCSearchEventAnnouncing-Protocol.h"
//#import "SCSearchEventListener-Protocol.h"
//#import "SCSearchResultsViewControllerDelegate-Protocol.h"
//#import "SCSelectGroupRecipientsDelegate-Protocol.h"
//#import "SCSendConfirmationViewControllerDelegate-Protocol.h"
//#import "SCSendViewControllerNavigationDelegate-Protocol.h"
//#import "SCSendViewControllerSendingDelegate-Protocol.h"
//#import "SCShakeToReportDelegate-Protocol.h"
//#import "SCSmartImageSwipeFilterViewDelegate-Protocol.h"
//#import "SCSmartSwipeFilterViewDelegate-Protocol.h"
//#import "SCSmartVideoSwipeFilterViewDelegate-Protocol.h"
//#import "SCStartChatDelegate-Protocol.h"
//#import "SCStickerPickerMenuDelegate-Protocol.h"
//#import "SCTimePickerViewControllerDelegate-Protocol.h"
//#import "SCTimeProfilable-Protocol.h"
//#import "UIActionSheetDelegate-Protocol.h"
//#import "UIGestureRecognizerDelegate-Protocol.h"

//@class CLLocation, NSArray, NSData, NSIndexPath, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSTimer, SCAttachmentsLogger, SCAudioToolsDrawer, SCBaseUploadableChatMedia, SCBitmojiPasteManager, SCBorderOverlayView, SCCameraDelayFiltersOnExperimentContext, SCCaptionManager, SCChatMediaMessage, SCCropOverlayView, SCCroppingState, SCCustomStickerController, SCCustomStickerManager, SCCustomVolumeController, SCDrawingView, SCEmojiBrushResourceProvider, SCGalleryActivityController, SCGeoFilterLogger, SCGradientView, SCGrowingButton, SCInfoStickerDataProvider, SCLabeledGrowingButton, SCLensInPreviewViewController, SCLoadingIndicatorView, SCMagicTools, SCMultiSnapCollectionViewController, SCMultiSnapStateHandler, SCMultiSnapV2CollectionViewController, SCMusicPickerViewController, SCMusicPlaylist, SCPinchResizeTooltipView, SCPixelationMaskStrokeDrawer, SCPreviewBlob, SCPreviewConfiguration, SCPreviewDependencyLoadingStates, SCPreviewEncryptedMediaFile, SCPreviewEphemeralMediaList, SCPreviewFilterStackingUIHelper, SCPreviewLogger, SCPreviewMultiCaptionManager, SCPreviewSaveButton, SCPreviewSaveButtonContextToken, SCPreviewSaveButtonController, SCPreviewScanner, SCPreviewSnapEditingState, SCPreviewSnapEditingStates, SCPreviewSnapSender, SCPreviewToolBar, SCPreviewTooltipBalloon, SCPreviewTooltipLabel, SCPromise, SCSearchAttachmentsDataProvider, SCSearchEventListenerAnnouncer, SCSelectRecipientsView, SCSendConfirmationView, SCSendToTransitionProvider, SCSmartCarouselFilterArranger, SCSmartSwipeFilterView, SCSnapCommonLoggingParameters, SCSnapCraftConcreteController, SCStickerContainer, SCStickerDataProvider, SCStickerPickerMenuView, SCStickerRankingManager, SCTimePickerViewController, SnapVideoFilter, UIButton, UIImageView, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIRotationGestureRecognizer, UITapGestureRecognizer, UIView, WKWebView;
//@protocol SCCameraPreviewEventDelegate, SCChatQuickCaptionDelegate, SCPreviewViewControllerSnapchatGalleryDelegate, SCScanPreviewControllerDelegate, SCSendToViewController, SCStartChatDelegate, SCTouchControllable, SendSnapNavigationControllerDelegate;

@interface PreviewViewController : UIViewController
//<SCOperaSilentlyPresentedProtocol, SCGrowingButtonDebugDelegate, SCPreviewScannerDelegate, SCCropOverlayViewListener, SCPixelationMaskStrokeDrawerDelegate, SCSearchEventAnnouncing, SCMiniProfileViewControllerDelegate, SCGroupMiniProfileViewControllerDelegate, SCModalPresentation, SCLensPreviewViewControllerDelegate, SCShakeToReportDelegate, UIGestureRecognizerDelegate, SCCaptionManagerDelegate, SCStickerPickerMenuDelegate, SCPromptFilterViewDelegate, SCSelectGroupRecipientsDelegate, SCSendConfirmationViewControllerDelegate, SCSendViewControllerSendingDelegate, SCPreviewFilterDataProviderDelegate, SCTimeProfilable, SCPreviewDependencyLoadingStatesDelegate, UIActionSheetDelegate, SCStartChatDelegate, SCChatStickerManagerListener, SCCraftControllerDelegate, SCMotionManagerListener, SCGalleryInformationWebViewControllerDelegate, SCCustomStickerControllerDelegate, SCCustomStickerManagerListener, SCPreviewDrawingToolBarButtonItemDelegate, SCPreviewToolBarDelegate, SCPreviewCaptionToolBarButtonItemDelegate, SCPreviewScissorsToolBarButtonItemDelegate, SCTimePickerViewControllerDelegate, SCSearchResultsViewControllerDelegate, SCMagicToolsDelegate, SCSmartSwipeFilterViewDelegate, SCSmartImageSwipeFilterViewDelegate, SCSmartVideoSwipeFilterViewDelegate, SCMagicToolsBaseControllerDelegate, SCBitmojiPasteDelegate, SCSearchEventListener, SCAudioToolsDrawerDelegate, SCMultiSnapCollectionViewControllerDelegate, SCMusicPickerViewControllerDelegate, SCPreviewMultiCaptionManagerDelegate, SCPreviewFilterStackingUIHelperDelegate, SCSendViewControllerNavigationDelegate, SCMultiSnapV2CollectionViewControllerDelegate>
//{
//    _Bool _hasCalledViewDidAppear;
//    CLLocation *_captureLocation;
//    NSArray *_captureLocationHistory;
//    long long _numberOfGesturesOnCurrentGestureTarget;
//    id <SCTouchControllable> _currentTouchTarget;
//    double _gesturesTransitionTimestamp;
//    UILongPressGestureRecognizer *_saveLongPressGestureRecognizer;
//    SCBaseUploadableChatMedia *_sharedMessageMediaToUpload;
//    NSTimer *_locationUpdateTimer;
//    _Bool _userSentToSettings;
//    SCPreviewSnapSender *_snapSender;
//    SCPreviewSnapEditingState *_latestEditStateOfSnapPostedFromMemories;
//    double _trackableViewOriginalScale;
//    _Bool _shouldDisplayTrackingCaptionTooltip;
//    SCPreviewTooltipBalloon *_trackingStickerTooltipBalloon;
//    SCPreviewTooltipBalloon *_trackingCaptionTooltipBalloon;
//    SCPreviewTooltipBalloon *_customStickerTooltipBalloon;
//    SCPinchResizeTooltipView *_pinchResizeTooltipView;
//    _Bool _shouldDisplayEmojiBrushOnboardingAnimation;
//    NSString *_emojiBrushListVersion;
//    UIImageView *_imageView;
//    SCGradientView *_bottomGradient;
//    SCGradientView *_rightGradient;
//    SCStickerDataProvider *_stickerDataProvider;
//    struct CGRect _originalPortraitBounds;
//    _Bool _savedToGallery;
//    _Bool _didFlashSaveButton;
//    UIView *_trackingObjectContainerView;
//    UIView *_captionContainerView;
//    _Bool _isListeningToMotionUpdates;
//    NSString *_attachmentUrlString;
//    unsigned long long _attachmentsQueryNumber;
//    NSString *_searchSessionId;
//    SCAttachmentsLogger *_attachmentsLogger;
//    SCSearchAttachmentsDataProvider *_searchAttachmentsDataProvider;
//    SCPromise *_previewThumbnailPromise;
//    SCStickerRankingManager *_stickerRankingManager;
//    SCCustomStickerManager *_customStickerManager;
//    SCGalleryActivityController *_activityController;
//    NSMutableArray *_bottomLeftButtons;
//    SCTimePickerViewController *_timePickerViewController;
//    SCEmojiBrushResourceProvider *_emojiBrushResourceProvider;
//    SCBitmojiPasteManager *_bitmojiPasteManager;
//    SCCropOverlayView *_cropOverlayView;
//    SCCroppingState *_identityCroppingState;
//    SCPreviewScanner *_previewScanner;
//    SCPreviewFilterStackingUIHelper *_filterStackingUIHelper;
//    SCPixelationMaskStrokeDrawer *_pixelationMaskStrokerDrawer;
//    long long _stickerPickerDefaultPage;
//    CDUnknownBlockType _resumeVideoBlock;
//    SCPreviewSaveButtonContextToken *_saveButtonControllerToken;
//    SCSearchEventListenerAnnouncer *_searchEventAnnouncer;
//    SCPreviewTooltipLabel *_filterStackingUITooltipLabel;
//    SCSendToTransitionProvider *_sendToTransitionProvider;
//    NSMutableDictionary *_stickerContentOffsetYDictionary;
//    WKWebView *_localWebViewOverlay;
//    SCCameraDelayFiltersOnExperimentContext *_delayFiltersOnExperimentContext;
//    _Bool _waitingToPresentSendVC;
//    _Bool _didCancelFromPreview;
//    _Bool _shouldEnableCaptionV2;
//    _Bool _presentingSendVC;
//    SCPreviewBlob *_previewBlob;
//    _Bool _hasStartGeneratingEncryptedMedia;
//    SCPreviewEncryptedMediaFile *_gallerySavedMediaFile;
//    _Bool _audioEnabled;
//    _Bool _quickSend;
//    _Bool _showingPostStoryViews;
//    _Bool _rotatingInterface;
//    _Bool _disableLayoutWhenDisappearing;
//    _Bool _ignoreAppearanceMethodsWhenBeingDismissed;
//    id <SendSnapNavigationControllerDelegate> _sendSnapNavigationControllerDelegate;
//    id <SCPreviewViewControllerSnapchatGalleryDelegate> _snapchatGalleryDelegate;
//    id <SCChatQuickCaptionDelegate> _quickCaptionDelegate;
//    id <SCStartChatDelegate> _startChatDelegate;
//    id <SCScanPreviewControllerDelegate> _scanPreviewDelegate;
//    id <SCCameraPreviewEventDelegate> _cameraPreviewDelegate;
//    UIView *_iconsContainerView;
//    SCPreviewConfiguration *_configuration;
//    SCLabeledGrowingButton *_sendButton;
//    SCMultiSnapCollectionViewController *_multiSnapViewController;
//    SCMultiSnapV2CollectionViewController *_multiSnapV2ViewController;
//    unsigned long long _appearanceState;
//    SCAudioToolsDrawer *_audioToolsDrawer;
//    UIView *_captionAndSwipeHelpLabel;
//    SCCaptionManager *_captionManager;
//    SCPreviewMultiCaptionManager *_multiCaptionManager;
//    SCInfoStickerDataProvider *_infoStickerDataProvider;
//    SCStickerPickerMenuView *_stickerPickerMenu;
//    NSIndexPath *_categoryIndexPath;
//    NSNumber *_stickerContentOffsetY;
//    SCStickerContainer *_stickerContainer;
//    UIView *_containerView;
//    SCLoadingIndicatorView *_waitingIndicator;
//    SCBorderOverlayView *_borderOverlayView;
//    UIView *_placeholderView;
//    SCChatMediaMessage *_chatMediaMessage;
//    SCDrawingView *_drawingView;
//    SCPreviewEphemeralMediaList *_ephemeralMediaList;
//    UITapGestureRecognizer *_tapGestureRecognizer;
//    UIPanGestureRecognizer *_panGestureRecognizer;
//    UIPinchGestureRecognizer *_pinchGestureRecognizer;
//    UIRotationGestureRecognizer *_rotationGestureRecognizer;
//    UILongPressGestureRecognizer *_longPressGestureRecognizer;
//    SCPreviewSaveButtonController *_saveButtonController;
//    UIViewController<SCSendToViewController> *_sendVC;
//    SnapVideoFilter *_snapVideoFilter;
//    SCSmartSwipeFilterView *_smartSwipeFilterView;
//    SCSmartCarouselFilterArranger *_smartCarouselFilterArranger;
//    SCPreviewDependencyLoadingStates *_dependencyLoadingStates;
//    SCPreviewSnapEditingState *_multiSnapThumbnailState;
//    SCPreviewSnapEditingStates *_snapchatGallerySnapEditingStates;
//    SCPreviewSnapEditingStates *_snapchatCameraSnapEditingStates;
//    SCMultiSnapStateHandler *_multiSnapStateHandler;
//    SCCustomStickerController *_customStickerController;
//    SCMagicTools *_magicTools;
//    UIImageView *_purikuraView;
//    SCGrowingButton *_xButton;
//    UIButton *_doneButton;
//    SCLabeledGrowingButton *_audioButton;
//    SCPreviewSaveButton *_saveButton;
//    SCLabeledGrowingButton *_storyButton;
//    SCGrowingButton *_shareButton;
//    SCPreviewToolBar *_toolbar;
//    SCSnapCraftConcreteController *_snapCraftController;
//    SCLensInPreviewViewController *_lensPreviewViewController;
//    SCMusicPickerViewController *_musicPickerViewController;
//    SCMusicPlaylist *_musicPlaylist;
//    NSData *_backgroundAudioData;
//    NSData *_reverseAudioData;
//    SCCustomVolumeController *_customVolumeController;
//    SCSelectRecipientsView *_selectRecipientsView;
//    SCSendConfirmationView *_sendConfirmationView;
//    long long _rotationTargetInterfaceOrientation;
//    SCSnapCommonLoggingParameters *_commonLoggingParameters;
//    SCPreviewLogger *_previewLogger;
//    SCGeoFilterLogger *_geofilterLogger;
//}
//
//+ (int)context;
//+ (id)pageViewName;
//+ (CDStruct_bac8f6e9)mediaScenePath;
//+ (id)announcerIdentifier;
//+ (double)mediaCornerRadiusForMediaAspectRatio:(double)arg1;
//+ (struct UIEdgeInsets)mediaAreaInsetsForInterfaceOrientation:(long long)arg1;
//+ (struct UIEdgeInsets)mediaAreaInsets;
//@property(retain, nonatomic) SCGeoFilterLogger *geofilterLogger; // @synthesize geofilterLogger=_geofilterLogger;
//@property(retain, nonatomic) SCPreviewLogger *previewLogger; // @synthesize previewLogger=_previewLogger;
//@property(copy, nonatomic) SCSnapCommonLoggingParameters *commonLoggingParameters; // @synthesize commonLoggingParameters=_commonLoggingParameters;
//@property(nonatomic) _Bool ignoreAppearanceMethodsWhenBeingDismissed; // @synthesize ignoreAppearanceMethodsWhenBeingDismissed=_ignoreAppearanceMethodsWhenBeingDismissed;
//@property(nonatomic) _Bool disableLayoutWhenDisappearing; // @synthesize disableLayoutWhenDisappearing=_disableLayoutWhenDisappearing;
//@property(nonatomic) long long rotationTargetInterfaceOrientation; // @synthesize rotationTargetInterfaceOrientation=_rotationTargetInterfaceOrientation;
//@property(nonatomic) _Bool rotatingInterface; // @synthesize rotatingInterface=_rotatingInterface;
//@property(nonatomic) _Bool showingPostStoryViews; // @synthesize showingPostStoryViews=_showingPostStoryViews;
//@property(retain, nonatomic) SCSendConfirmationView *sendConfirmationView; // @synthesize sendConfirmationView=_sendConfirmationView;
//@property(retain, nonatomic) SCSelectRecipientsView *selectRecipientsView; // @synthesize selectRecipientsView=_selectRecipientsView;
//@property(retain, nonatomic) SCCustomVolumeController *customVolumeController; // @synthesize customVolumeController=_customVolumeController;
//@property(retain, nonatomic) NSData *reverseAudioData; // @synthesize reverseAudioData=_reverseAudioData;
//@property(copy, nonatomic) NSData *backgroundAudioData; // @synthesize backgroundAudioData=_backgroundAudioData;
//@property(retain, nonatomic) SCMusicPlaylist *musicPlaylist; // @synthesize musicPlaylist=_musicPlaylist;
//@property(retain, nonatomic) SCMusicPickerViewController *musicPickerViewController; // @synthesize musicPickerViewController=_musicPickerViewController;
//@property(retain, nonatomic) SCLensInPreviewViewController *lensPreviewViewController; // @synthesize lensPreviewViewController=_lensPreviewViewController;
//@property(retain, nonatomic) SCSnapCraftConcreteController *snapCraftController; // @synthesize snapCraftController=_snapCraftController;
@property(retain, nonatomic) SCPreviewToolBar *toolbar; // @synthesize toolbar=_toolbar;
//@property(retain, nonatomic) SCGrowingButton *shareButton; // @synthesize shareButton=_shareButton;
//@property(retain, nonatomic) SCLabeledGrowingButton *storyButton; // @synthesize storyButton=_storyButton;
//@property(retain, nonatomic) SCPreviewSaveButton *saveButton; // @synthesize saveButton=_saveButton;
//@property(retain, nonatomic) SCLabeledGrowingButton *audioButton; // @synthesize audioButton=_audioButton;
//@property(retain, nonatomic) UIButton *doneButton; // @synthesize doneButton=_doneButton;
@property(retain, nonatomic) UIButton *cutButton; // @synthesize doneButton=_doneButton;
//@property(retain, nonatomic) SCGrowingButton *xButton; // @synthesize xButton=_xButton;
//@property(retain, nonatomic) UIImageView *purikuraView; // @synthesize purikuraView=_purikuraView;
//@property(retain, nonatomic) SCMagicTools *magicTools; // @synthesize magicTools=_magicTools;
//@property(retain, nonatomic) SCCustomStickerController *customStickerController; // @synthesize customStickerController=_customStickerController;
//@property(retain, nonatomic) SCMultiSnapStateHandler *multiSnapStateHandler; // @synthesize multiSnapStateHandler=_multiSnapStateHandler;
//@property(retain, nonatomic) SCPreviewSnapEditingStates *snapchatCameraSnapEditingStates; // @synthesize snapchatCameraSnapEditingStates=_snapchatCameraSnapEditingStates;
//@property(retain, nonatomic) SCPreviewSnapEditingStates *snapchatGallerySnapEditingStates; // @synthesize snapchatGallerySnapEditingStates=_snapchatGallerySnapEditingStates;
//@property(retain, nonatomic) SCPreviewSnapEditingState *multiSnapThumbnailState; // @synthesize multiSnapThumbnailState=_multiSnapThumbnailState;
//@property(retain, nonatomic) SCPreviewDependencyLoadingStates *dependencyLoadingStates; // @synthesize dependencyLoadingStates=_dependencyLoadingStates;
//@property(retain, nonatomic) SCSmartCarouselFilterArranger *smartCarouselFilterArranger; // @synthesize smartCarouselFilterArranger=_smartCarouselFilterArranger;
//@property(retain, nonatomic) SCSmartSwipeFilterView *smartSwipeFilterView; // @synthesize smartSwipeFilterView=_smartSwipeFilterView;
//@property(retain, nonatomic) SnapVideoFilter *snapVideoFilter; // @synthesize snapVideoFilter=_snapVideoFilter;
//@property(retain, nonatomic) UIViewController<SCSendToViewController> *sendVC; // @synthesize sendVC=_sendVC;
//@property(retain, nonatomic) SCPreviewSaveButtonController *saveButtonController; // @synthesize saveButtonController=_saveButtonController;
//@property(retain, nonatomic) UILongPressGestureRecognizer *longPressGestureRecognizer; // @synthesize longPressGestureRecognizer=_longPressGestureRecognizer;
//@property(retain, nonatomic) UIRotationGestureRecognizer *rotationGestureRecognizer; // @synthesize rotationGestureRecognizer=_rotationGestureRecognizer;
//@property(retain, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer; // @synthesize pinchGestureRecognizer=_pinchGestureRecognizer;
//@property(retain, nonatomic) UIPanGestureRecognizer *panGestureRecognizer; // @synthesize panGestureRecognizer=_panGestureRecognizer;
//@property(retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
//@property(retain, nonatomic) SCPreviewEphemeralMediaList *ephemeralMediaList; // @synthesize ephemeralMediaList=_ephemeralMediaList;
//@property(retain, nonatomic) SCDrawingView *drawingView; // @synthesize drawingView=_drawingView;
//@property(retain, nonatomic) SCChatMediaMessage *chatMediaMessage; // @synthesize chatMediaMessage=_chatMediaMessage;
//@property(retain, nonatomic) UIView *placeholderView; // @synthesize placeholderView=_placeholderView;
//@property(retain, nonatomic) SCBorderOverlayView *borderOverlayView; // @synthesize borderOverlayView=_borderOverlayView;
//@property(retain, nonatomic) SCLoadingIndicatorView *waitingIndicator; // @synthesize waitingIndicator=_waitingIndicator;
//@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
//@property(retain, nonatomic) SCStickerContainer *stickerContainer; // @synthesize stickerContainer=_stickerContainer;
//@property(retain, nonatomic) NSNumber *stickerContentOffsetY; // @synthesize stickerContentOffsetY=_stickerContentOffsetY;
//@property(retain, nonatomic) NSIndexPath *categoryIndexPath; // @synthesize categoryIndexPath=_categoryIndexPath;
//@property(retain, nonatomic) SCStickerPickerMenuView *stickerPickerMenu; // @synthesize stickerPickerMenu=_stickerPickerMenu;
//@property(retain, nonatomic) SCInfoStickerDataProvider *infoStickerDataProvider; // @synthesize infoStickerDataProvider=_infoStickerDataProvider;
//@property(retain, nonatomic) SCPreviewMultiCaptionManager *multiCaptionManager; // @synthesize multiCaptionManager=_multiCaptionManager;
//@property(retain, nonatomic) SCCaptionManager *captionManager; // @synthesize captionManager=_captionManager;
//@property(retain, nonatomic) UIView *captionAndSwipeHelpLabel; // @synthesize captionAndSwipeHelpLabel=_captionAndSwipeHelpLabel;
//@property(retain, nonatomic) SCAudioToolsDrawer *audioToolsDrawer; // @synthesize audioToolsDrawer=_audioToolsDrawer;
//@property(nonatomic) _Bool quickSend; // @synthesize quickSend=_quickSend;
//@property(nonatomic) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
//@property(nonatomic) unsigned long long appearanceState; // @synthesize appearanceState=_appearanceState;
//@property(readonly, nonatomic) SCMultiSnapV2CollectionViewController *multiSnapV2ViewController; // @synthesize multiSnapV2ViewController=_multiSnapV2ViewController;
//@property(readonly, nonatomic) SCMultiSnapCollectionViewController *multiSnapViewController; // @synthesize multiSnapViewController=_multiSnapViewController;
//@property(retain, nonatomic) SCLabeledGrowingButton *sendButton; // @synthesize sendButton=_sendButton;
@property(readonly, nonatomic) SCPreviewConfiguration *configuration; // @synthesize configuration=_configuration;
//@property(retain, nonatomic) UIView *iconsContainerView; // @synthesize iconsContainerView=_iconsContainerView;
//@property(nonatomic) __weak id <SCCameraPreviewEventDelegate> cameraPreviewDelegate; // @synthesize cameraPreviewDelegate=_cameraPreviewDelegate;
//@property(nonatomic) __weak id <SCScanPreviewControllerDelegate> scanPreviewDelegate; // @synthesize scanPreviewDelegate=_scanPreviewDelegate;
//@property(nonatomic) __weak id <SCStartChatDelegate> startChatDelegate; // @synthesize startChatDelegate=_startChatDelegate;
//@property(nonatomic) __weak id <SCChatQuickCaptionDelegate> quickCaptionDelegate; // @synthesize quickCaptionDelegate=_quickCaptionDelegate;
//@property(nonatomic) __weak id <SCPreviewViewControllerSnapchatGalleryDelegate> snapchatGalleryDelegate; // @synthesize snapchatGalleryDelegate=_snapchatGalleryDelegate;
//@property(nonatomic) __weak id <SendSnapNavigationControllerDelegate> sendSnapNavigationControllerDelegate; // @synthesize sendSnapNavigationControllerDelegate=_sendSnapNavigationControllerDelegate;
//- (void).cxx_destruct;
//- (void)_asyncGenerateEncryptedMediaIfNeeded;
//- (void)_updateConfigurationForLens:(id)arg1 image:(id)arg2;
//- (void)lensPreviewViewController:(id)arg1 updateLensAppliedImageWithLens:(id)arg2;
//- (void)lensPreviewViewController:(id)arg1 showSpinner:(_Bool)arg2;
//- (void)lensPreviewViewController:(id)arg1 didSelectLens:(id)arg2 configuration:(id)arg3 commandDelegate:(id)arg4;
//- (void)modalDismissalDidEnd;
//- (void)modalPresentationDidEnd;
//- (double)_getCroppingAspectRatio;
//- (void)_attachCameraPreviewToPlaceholderView;
//- (long long)_currentCellViewPosition;
//- (void)didCancelFromPreview;
//- (void)videoFilterAtCurrentStateShouldEmbedOverlay:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
//- (_Bool)hasAnimatedContent;
//- (void)_extractSnapLabelsWithPreviewConfiguration:(id)arg1;
//- (long long)_getTranscodingLatencyReporterSource;
//- (void)_updateMusicStickerWithMusicPlaylist:(id)arg1;
//- (struct CGPoint)_defaultCenterOfMusicSticker:(id)arg1;
//- (void)musicPickerViewControllerDidFinish:(id)arg1;
//- (_Bool)_useWebPForImageFormat;
//- (_Bool)_anyFilterAvailable;
//- (void)_updateSmartAndVisualFilterEnabled:(_Bool)arg1;
//- (_Bool)_smartFiltersOrVisualFiltersEnabled;
//- (void)_checkForConfidentialFeatureWithCompletion:(CDUnknownBlockType)arg1;
//- (id)_displayingConfidentalFeatureName;
//- (id)_addExtraLoggingData:(id)arg1;
//- (void)didTriggerEventWithEventName:(id)arg1 announcerIdentifier:(id)arg2 extraData:(id)arg3;
//- (void)previewScanner:(id)arg1 didScanWithResult:(id)arg2;
//- (void)timePickerViewController:(id)arg1 didSelectTimeItem:(id)arg2;
//- (void)galleryInformationWebViewControllerDidPressBack:(id)arg1;
//- (void)_extractVisualTagsForImage:(id)arg1;
//- (void)_extractImageFrameAndRecommend:(id)arg1;
//- (_Bool)_shouldPauseRotation;
//- (void)didUpdateRotation:(double)arg1 translation:(struct CGVector)arg2;
//- (void)stickerPackagesDidChangeWithCategoryType:(long long)arg1;
//- (void)sendViewController:(id)arg1 addToTopics:(id)arg2;
//- (void)sendViewController:(id)arg1 sendToRecipients:(id)arg2 invitedRecipients:(id)arg3 postToMyStory:(_Bool)arg4 myStoryPrivacyOverride:(id)arg5 officialStories:(id)arg6 sharedStories:(id)arg7 businessIds:(id)arg8 mobStories:(id)arg9 newMobStories:(id)arg10 mischiefs:(id)arg11 businessProfiles:(id)arg12 gallery:(_Bool)arg13 inviteRecipientShown:(long long)arg14 additionalText:(id)arg15;
//- (id)sendSessionId;
//- (void)sendViewControllerWillCancel:(id)arg1;
//- (void)dismissSendViewController:(id)arg1;
//- (long long)_cropAwareMediaOrientation;
//- (void)_didScreenShot;
//- (void)generateBlobWithUsingOriginalImage:(_Bool)arg1 usingFilteredImage:(_Bool)arg2 croppingAspectRatio:(double)arg3 completion:(CDUnknownBlockType)arg4;
//- (void)generateBlobWithCompletion:(CDUnknownBlockType)arg1;
//- (void)_logDirectSnapCreate:(id)arg1;
//- (void)_logDirectSnapPreviewOnPossibleExitWithIsTriggeredBySend:(_Bool)arg1;
//- (void)_didStartSavingWithSaveToSnapchatGallery:(_Bool)arg1 saveToCameraRoll:(_Bool)arg2 viewContext:(id)arg3;
//- (void)logSwipeFilterSwipesForEvent:(id)arg1;
//- (void)groupMiniProfileController:(id)arg1 requestsAction:(long long)arg2;
//- (void)groupMiniProfileControllerDidUpdateGroup:(id)arg1;
//- (void)groupMiniProfileController:(id)arg1 wantsToNavigateToChatForFriend:(id)arg2 deepLinkURL:(id)arg3;
//- (void)groupMiniProfileControllerDidPressSnapButton:(id)arg1;
//- (void)groupMiniProfileControllerDidPressChatButton:(id)arg1;
//- (void)miniProfileController:(id)arg1 wantsToNavigateToChatWithDeepLinkURL:(id)arg2;
//- (void)setGroupConversationById:(id)arg1 shouldDisplayChatCards:(_Bool)arg2 navigationAction:(long long)arg3;
//- (void)navigateToChatViewAnimated:(_Bool)arg1;
//- (void)navigateToChatView;
//- (void)setChatUsername:(id)arg1 chatPageSource:(long long)arg2 shouldDisplayChatCards:(_Bool)arg3 navigationAction:(long long)arg4;
//- (void)startIgnoringAppearanceMethodsWhenBeingDismissed;
//- (void)_recordGallerySnapEditingState;
//- (void)previewDidLoadAllDependencies:(id)arg1;
//- (_Bool)_shouldShowFilterWithSpeed:(id)arg1;
//- (void)previewFilterDataProviderDidCompleteUpdates:(id)arg1 succeeded:(_Bool)arg2;
//- (void)previewFilterDataProviderDidUpdateContextImages:(id)arg1;
//- (void)previewFilterDataProviderDidUpdateWeather:(id)arg1;
//- (void)previewFilterDataProviderDidUpdateAltitude:(id)arg1;
//- (void)previewFilterDataProviderDidUpdateSpeed:(id)arg1;
//- (void)previewFilterDataProviderDidUpdateGeoFilterImages:(id)arg1;
//- (void)previewFilterDataProviderDidUpdateGeoFilters:(id)arg1;
//- (void)previewFilterDataProviderDidUpdateVisualContextFilters:(id)arg1;
//- (void)previewFilterDataProviderDidUpdateVenueFilter:(id)arg1;
//- (void)_removePromptFilter;
//- (void)turnOnFiltersButtonPressed;
//- (void)_setAudioToolStateFilterStyleId:(id)arg1 audioEnabled:(_Bool)arg2;
//- (void)_setAudioToolsDrawerRestrictedButtonsEnabled:(_Bool)arg1 alpha:(double)arg2;
//- (void)audioToolsDrawerMadeSelection:(id)arg1;
//- (void)audioToolsDrawerEnteredStandardSelectMode:(id)arg1;
//- (void)audioToolsDrawerIsContracting:(id)arg1;
//- (void)audioToolsDrawerIsExpanding:(id)arg1;
//- (void)venueFilterViewDidUpdate;
//- (void)_setupBackgroundAndOverridingAudioDataIfNeededForVideoFilter:(id)arg1;
//- (void)swipeFilterView:(id)arg1 endedSwipeSessionNumber:(unsigned long long)arg2;
//- (void)swipeViewWillClearAllStacked:(id)arg1;
//- (void)swipeViewDidEndDoubleSwiping:(id)arg1;
//- (void)swipeViewWillStartDoubleSwiping:(id)arg1;
//- (void)venueFilterView:(id)arg1 didReportWithVenueSelector:(id)arg2;
//- (void)swipeViewDidEndDecelerating:(id)arg1;
//- (void)swipeFilterView:(id)arg1 longPressDidCancel:(id)arg2;
//- (void)swipeFilterViewDidScroll:(id)arg1 isRecoveryMode:(_Bool)arg2;
//- (void)weatherViewDidUpdate:(id)arg1;
//- (void)altitudeViewDidUpdate:(id)arg1;
//- (void)geoFilterViewNeedsUpdate:(id)arg1;
//- (void)_removeFilterStackingUITooltipLabel;
//- (void)previewFilterStackingUIHelperDidPressStackingButton:(id)arg1;
//- (_Bool)_shouldIncludePromptFilterView;
//- (id)filtersStateWithStripsUnselectedSponsoredFilters;
//- (void)selectInitialFiltersInSwipeFilterView;
//- (void)_addOrUpdateFilters:(id)arg1 withAppearanceSettings:(id)arg2 unlockedFilterId:(id)arg3;
//- (void)_generateReverseAudioCompletion:(CDUnknownBlockType)arg1;
//- (void)_addMotionFilters;
//- (void)_updateContextFilters;
//- (void)_addVisualFilters;
//- (void)_addStreakFilter;
//- (void)_addSmartFilters;
//- (id)_retrieveCarouselConfiguration;
//- (void)_setupAndConfigureSmartSwipeFilterView;
//- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
//- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
//- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
//- (void)croppingDidFillScreen:(id)arg1;
//- (void)croppingDidShowTeachingTooltip:(id)arg1;
//- (void)croppingDidDeactivate:(id)arg1;
//- (void)croppingDidFinishTransform:(id)arg1;
//- (void)croppingDidChangeTransform:(id)arg1;
//- (void)_setAudioFunctionalityEnabled:(_Bool)arg1;
//- (void)_removeBounceVideoForNewBounceIncoming:(_Bool)arg1;
//- (void)_skimThroughVideoForTrackingInReverse:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
//- (void)_showBounceVideoWithBounceOffset:(double)arg1 completion:(CDUnknownBlockType)arg2;
//- (void)_showBounceViewFromItem:(id)arg1;
//- (void)_updateSmartFilterViewWithAsset:(id)arg1;
//- (void)_pauseVideo;
//- (void)_resumeVideoWithDelay:(double)arg1;
//- (_Bool)shouldForwardGestureRecognizer;
//- (void)_setViewsAlphaForCropping:(double)arg1 animated:(_Bool)arg2;
//- (void)_touchControlGestureEnds:(id)arg1;
//- (void)_touchControlGestureChanges:(id)arg1;
//- (void)_touchControlGestureBegins:(id)arg1;
//- (id)_deletableViewOfTouchTarget:(id)arg1;
//- (id)_trackableViewOfTouchTarget:(id)arg1;
//- (void)_panPinchOrRotateWithGestureRecognizer:(id)arg1 block:(CDUnknownBlockType)arg2;
//- (void)longPress:(id)arg1;
//- (void)_handleTouchControlGesture:(id)arg1;
//- (id)_allTrackedObjectViews;
//- (void)_disableObjectTracking:(id)arg1 type:(long long)arg2;
//- (void)_enableObjectTracking:(id)arg1 type:(long long)arg2 currentTouchPoint:(struct CGPoint)arg3;
//- (void)_prepareObjectTracking:(id)arg1 type:(long long)arg2;
//- (void)tap:(id)arg1;
//- (void)_resetGestureRecognizers;
//- (void)drawingMovedToPoint:(struct CGPoint)arg1;
//- (void)didPinchBrush;
//- (void)didEndDrawingWithStrokeSize:(double)arg1 isResized:(_Bool)arg2;
//- (void)didStartDrawing;
//- (void)didAlterDrawing;
//- (void)drawingEnabled:(_Bool)arg1;
//- (void)didUpdateColor:(id)arg1 isHidden:(_Bool)arg2;
//- (void)captionModeDidChangeFromSwipe;
//- (void)startedEditingCaption;
//- (void)stoppedEditingCaptionWithCaptionAdded:(_Bool)arg1;
//- (void)prepareCaptionEditing;
//- (_Bool)canStartEditingCaption;
//- (void)_loadCaptionsFromState:(id)arg1;
//- (void)_setCaptionsWithState:(id)arg1;
//- (void)didPickStyle:(id)arg1;
//- (void)showSnapcraftVideo:(id)arg1;
//- (void)updateStylizedImage:(id)arg1 styleId:(id)arg2;
//- (void)craftStylizingDidEnd;
//- (void)craftStylizingWillBegin;
//- (void)closedCraftPicker;
//- (void)openedCraftPicker;
//- (void)bitmojiKeyboardDidPasteBitmojiSticker:(id)arg1;
//- (id)stickerContainingGesture:(id)arg1;
//- (_Bool)trashContains:(struct CGPoint)arg1;
//- (void)_checkDeletableViewGestureInTrashcan:(id)arg1 view:(id)arg2;
//- (void)_endDeletableViewGestures:(id)arg1 view:(id)arg2;
//- (void)_beginDeletableViewGestures:(id)arg1;
//- (long long)filterSourceForStickerCategoryIndex:(unsigned long long)arg1 isFilterMenuFromToolbar:(_Bool)arg2;
//- (void)stickerSelected:(id)arg1 center:(struct CGPoint)arg2 thumbnail:(id)arg3 stickerIndex:(unsigned long long)arg4 categoryIndex:(unsigned long long)arg5 isFromRecents:(_Bool)arg6 searchTag:(id)arg7;
//- (id)_insertSticker:(id)arg1 center:(struct CGPoint)arg2 thumbnail:(id)arg3 isFromRecents:(_Bool)arg4;
//- (void)didUpdatestickerPickerDismissalAlpha:(double)arg1 translation:(double)arg2;
//- (void)closeStickerPickerMenuShouldOpenSnapCut:(_Bool)arg1;
//- (void)closedStickerPickerMenuAtCategory:(id)arg1 sticker:(id)arg2 enterSearchCount:(long long)arg3 pretypeStickerTagSelectCount:(long long)arg4 prefixMatchStickerTagSelectCount:(long long)arg5 isSingleCategoryMode:(_Bool)arg6;
//- (void)openedStickerPickerMenu;
//- (void)customStickerAutoSectionDataDidChange;
//- (void)customStickerDataDidChange;
//- (void)updateRecentPage;
//- (void)friendmojiAvatarPickerClosedWithFriendmojiType:(long long)arg1 selectedStickerId:(id)arg2;
//- (_Bool)friendmojiHintRequestedWithTargetView:(id)arg1 delegate:(id)arg2;
//- (_Bool)avatarPickerRequestedWithBitmojiUsers:(id)arg1 targetView:(id)arg2 delegate:(id)arg3;
//- (void)updateCustomStickerData;
//- (_Bool)moveCustomStickerCellToDelete:(id)arg1;
//- (_Bool)endCustomStickerDeletion:(id)arg1 withStickerImage:(id)arg2;
//- (void)beginCustomStickerMoving;
//- (void)magicToolsOpenForController:(id)arg1;
//- (void)updateImageProcessCommandWithMaskData:(id)arg1 pixelType:(long long)arg2;
//- (void)_setupPixelationStrokeDrawerWithPixelType:(long long)arg1;
//- (void)_selectMagicMode:(long long)arg1 enabled:(_Bool)arg2;
//- (void)didEndDrawingPixelation;
//- (void)didStartDrawingPixelation;
//- (void)drawingToolBarButtonItemDidPressPixelation:(id)arg1 withPixelType:(long long)arg2;
//- (void)displayedEmojiBrushAnimation;
//- (void)drawingToolBarButtonItemDidPressDrawer:(id)arg1 enabled:(_Bool)arg2;
//- (void)drawingToolBarButtonItemDidPressReset:(id)arg1;
//- (void)ScissorsToolBarButtonItemDidChangeTintColor:(id)arg1;
//- (void)scissorsToolBarButtonItemDidChangePurikuraImage:(id)arg1;
//- (void)scissorsToolBarButtonItemDidPressTint:(id)arg1 enabled:(_Bool)arg2;
//- (void)scissorsToolBarButtonItemDidPressPurikura:(id)arg1 enabled:(_Bool)arg2;
//- (void)scissorsToolBarButtonItemDidPressBlur:(id)arg1 enabled:(_Bool)arg2;
//- (void)scissorsToolBarButtonItemDidPressErase:(id)arg1 enabled:(_Bool)arg2;
//- (void)scissorsToolBarButtonItemDidPressCut:(id)arg1 enabled:(_Bool)arg2;
//- (void)scissorsToolBarButtonItemDidPressRevert:(id)arg1;
//- (void)purikuraController:(id)arg1 closeWithPurikuraView:(id)arg2;
- (void)magicToolsController:(id)arg1 editDidFinishWithImage:(id)arg2;
- (void)magicToolsControllerEditStatusDidChange:(id)arg1;
- (void)magicToolsControllerClosedMagicToolsView:(id)arg1;
- (void)magicToolsControllerOpenedMagicToolsView:(id)arg1;
- (void)InpaintingDidFinishWithImage:(UIImage *)arg1 eraserState:(int)arg2;
//- (void)scribbleEnded;
//- (void)scribbleBegan;
//- (void)_addAndDisplayCustomSticker:(id)arg1 center:(struct CGPoint)arg2;
//- (void)finishCuttingWithImageData:(id)arg1 center:(struct CGPoint)arg2;
//- (void)closedCustomStickerScribbleView;
//- (void)openedCustomStickerScribbleView;
//- (void)_recordSnapEditingState;
//- (void)_updateMotionUpdatesListeningState;
//- (void)_updateXButtonAndSnapEditingState;
//- (void)_updateEditingStates;
//- (double)contentTargetAspectRatio;
//- (double)contentScaleFactor;
//- (struct CGRect)fullMediaContentBounds;
//- (struct CGRect)containerViewContentBounds;
//- (struct CGRect)swipeFilterViewInitialFrame;
//- (struct CGSize)_contentViewSize;
//- (struct CGRect)_sendConfirmationFrame;
//- (double)_sendConfirmationContentBottomInset;
//- (struct CGRect)selectRecipientsFrame;
//- (struct CGRect)_pinchResizeTooltipFrame;
//- (struct CGRect)helpLabelFrame;
//- (struct CGRect)sendButtonFrame;
//- (struct CGRect)_bottomLeftButtonFrameAtIndex:(long long)arg1;
//- (_Bool)_shouldShowHintLabel;
//- (long long)correctedInterfaceOrientation;
//- (void)didRotateFromInterfaceOrientation:(long long)arg1;
//- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
//- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
//- (void)setRotationEnabled:(_Bool)arg1;
//- (unsigned long long)supportedInterfaceOrientations;
//- (void)setActionButtonsForDrawingHidden:(_Bool)arg1;
//- (void)setActionButtonsHidden:(_Bool)arg1;
//- (void)setOpacityForActionButtons:(double)arg1;
//- (void)setActionButtonsEnabled:(_Bool)arg1;
//- (void)setPreviewButtonsHidden:(_Bool)arg1;
//- (void)viewDidDisappear:(_Bool)arg1;
//- (void)viewWillDisappear:(_Bool)arg1;
//- (id)delayFiltersOnExperimentContext;
//- (void)_tryTurningOnFilters;
//- (void)viewDidAppear:(_Bool)arg1;
//- (void)_didDismissFromSendViewController;
//- (void)viewWillAppear:(_Bool)arg1;
//- (void)prepareForRotationWithSubviewsWithFixedOrientation:(id)arg1 fromInterfaceOrientation:(long long)arg2 toInterfaceOrientation:(long long)arg3;
//- (void)_layoutContainerSubviewsWithFixedOrientationAndFullSize:(id)arg1 contentSize:(id)arg2;
//- (id)_containerSubviewsWithFixedOrientationAndContentSize;
//- (id)_containerSubviewsWithFixedOrientationAndFullSize;
//- (void)_layoutRootSubviewsWithFixedOrientationAndSafeAreaSize:(id)arg1;
//- (id)_rootSubviewWithFixedOrientationAndSafeAreaSize;
//- (void)_layoutAllSubviewsWithFixedOrientation;
//- (id)_allSubviewsWithFixedOrientation;
//- (void)updateLayoutForView:(id)arg1 frame:(struct CGRect)arg2;
//- (unsigned long long)preferredScreenEdgesDeferringSystemGestures;
//- (long long)preferredStatusBarStyle;
//- (_Bool)prefersStatusBarHidden;
//- (struct CGSize)sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize)arg2;
//- (void)viewDidLayoutSubviews;
//- (void)viewDidLoad;
//- (void)_timerDidChangeToTimeItem:(id)arg1;
//- (void)videoSwipeFilterViewWillLoopVideo:(id)arg1;
//- (void)videoSwipeFilterViewResetVideoAsset:(id)arg1;
//- (void)videoSwipeFilterView:(id)arg1 didPlayToSnapAtIndex:(long long)arg2 lastPlayedIndex:(long long)arg3;
//- (void)_saveCurrentOverlayItemsToMultiSnapAtIndex:(long long)arg1;
//- (void)didRenderFirstFrame:(id)arg1;
//- (void)didRenderImage:(id)arg1;
//- (void)lensAppliedImageWithCompletionHandler:(CDUnknownBlockType)arg1;
//- (void)filteredImageWithCroppingAspectRatio:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
//- (void)filteredImageWithCompletionHandler:(CDUnknownBlockType)arg1;
//- (void)_updateVolume;
//- (void)multiSnapCollectionViewController:(id)arg1 didDeleteSegmentAtIndex:(long long)arg2;
//- (void)multiSnapV2CollectionViewControllerDidTrim:(id)arg1;
//- (void)multiSnapV2CollectionViewControllerDidSplitOrDeleteToSingleSegment:(id)arg1;
//- (void)_toggleTimerToolButton;
//- (void)_toggleAudioFilterTool;
//- (void)_toggleAttachmentToolButton;
//- (void)multiSnapV2CollectionViewControllerDidUpdateSegmentStates:(id)arg1;
//- (void)_updateMultiSnapThumbnailsIfNecessary;
//- (void)_multiSnapV2SegmentStateChangedShouldUpdateThumbnails:(_Bool)arg1;
//- (id)_currentSnapEditingState;
//- (void)_setupMultiSnapDelegateAndPlaybackIfNeeded;
//- (struct CGRect)_multiSnapViewFrame;
//- (void)showVideoIfNecessary;
//- (void)stopVideoIfNecessary;
//- (void)stopImageDisplayIfNecessary;
//- (void)startImageDisplayIfNecessary;
//- (void)saveAssetChangesAsNewCopy:(_Bool)arg1;
//- (void)_saveSnapChangesAndDismiss:(_Bool)arg1 shouldSaveToCameraRoll:(_Bool)arg2 savingSource:(long long)arg3;
//- (void)saveSnapChangesAndExitPreview;
//- (void)_exitPreview;
//- (void)_updateGeofilterLoadingStageForLogging;
//- (void)_prepareToExitPreviewWithLogging:(_Bool)arg1;
//- (void)_filtersTurnedOn;
//- (void)didBecomeActive:(id)arg1;
//- (void)didFinishSavingSnapToAlbumWithError:(id)arg1 saveButtonControllerToken:(id)arg2;
//- (void)_handleSavingSnapToAlbumError:(id)arg1;
//- (id)bounceOffset;
//- (_Bool)isTimerInfinite;
//- (double)videoDuration;
//- (double)videoPlaybackRate;
//- (double)imageDuration;
//- (void)prepareMedia:(id)arg1 chatMedia:(id)arg2;
//- (void)_prepareImageToVideoSnap;
//- (id)_convertToPngImage:(id)arg1 withOptimizedPngData:(id)arg2;
//- (void)prepareMediaVideo:(id)arg1 chatMediaVideo:(id)arg2 overlayImage:(id)arg3 overlayPngData:(id)arg4 rotationalOverlay:(id)arg5 overlayImageForMask:(id)arg6 thumbnailImage:(id)arg7 videoTrackedImages:(id)arg8 isCaptionPresent:(_Bool)arg9;
//- (void)prepareMediaImage:(id)arg1 chatMediaImage:(id)arg2 withScreenshot:(id)arg3 withScreenOverlay:(id)arg4 shouldUseMediaOrientation:(_Bool)arg5;
//- (id)parametersForImageHealthCheck;
//- (id)commonSendParameters;
//- (void)_updateLoggingParametersForMobStories:(id)arg1;
//- (void)_prepareTapCountForOverlayFilterView:(id)arg1 filterType:(long long)arg2;
//- (void)_updateLoggingParametersForGeoFilterView:(id)arg1;
//- (void)updateCommonLoggingParameters;
//- (void)_prepareEphemeralMediaList;
//- (void)_initializeEphemeralMediaList;
//- (struct CGSize)_outputOverlaySize;
//- (void)clearupBeforeHandleQuickAction;
//- (_Bool)_shouldShowAbandonWarning;
//- (void)_showAbandonWarning;
//- (void)_xPressed;
//- (void)didUpdateRecipientMetadata;
//- (void)didTapAddStoryHeader:(id)arg1;
//- (void)didUpdateRecipients;
//- (void)_sendFromConfirmationBar;
//- (void)didPressSendConfirmationBar;
//- (void)_sendFromDidPressSend;
//- (void)didPressSend;
//- (void)hidePostStory;
//- (void)updateSendConfirmationView;
//- (void)presentPostStorySelection;
//- (void)_cacheSnapToGalleryMediaStore;
//- (id)_mobStoryPublicationsToAutosaveForMobStories:(id)arg1;
//- (_Bool)_shouldAutosaveToMyStoryGalleryEntryForPostToMyStory:(_Bool)arg1;
//- (void)_autoSaveToGalleryIfNecessaryToMyStoryEntry:(_Bool)arg1 mobStoryPublications:(id)arg2;
//- (void)_postDirectlyToMyStory:(_Bool)arg1 withOfficialStories:(id)arg2 withSharedStories:(id)arg3 withMobStories:(id)arg4;
//- (void)postStoryDirectly;
//- (void)_sendToStory;
//- (void)_storyPressed;
//- (id)_fullScreenImageForOverlay:(long long)arg1;
//- (id)_fullScreenImage;
//- (void)_videoProviderWithHandlerBlock:(CDUnknownBlockType)arg1;
//- (id)_videoProvider;
//- (_Bool)_venueFilterContainsGesture:(id)arg1;
//- (id)_selectedVenueFilterView;
//- (id)_getVenueName;
//- (id)_getVenueId;
//- (void)_populateVenueFilterInfo;
//- (id)_selectedGeofilter;
//- (id)_getGeofencedContextHint;
//- (id)_getGeoFilterId;
//- (void)resetCaptionViews;
//- (void)_placeTrackingTooltip:(id)arg1 trackingObjectView:(id)arg2;
//- (void)_fadeOutTooltip:(id)arg1;
//- (void)_showTooltip:(id)arg1 withFadeOutDelay:(double)arg2;
//- (id)_prepareNewTooltipWithText:(id)arg1;
//- (id)_showTooltipWithText:(id)arg1 leftToObjectView:(id)arg2 fadeOutDelay:(double)arg3;
//- (id)_showTooltipWithText:(id)arg1 belowObjectView:(id)arg2 fadeOutDelay:(double)arg3;
//- (void)_openAttachmentsView;
//- (void)_initializeFaceCraftController;
//- (void)_initializeSnapCraftController;
//- (void)captionToolBarButtonItem:(id)arg1 didChangeColor:(id)arg2;
//- (void)captionToolBarButtonItemDidChangeCaptionStyle:(id)arg1;
//- (id)_updateRecentStickers;
//- (void)_enterSnapCutModeFromStickerPickerMenu:(_Bool)arg1;
//- (void)_shareWithVideoFilter:(id)arg1;
//- (void)_sharePressed;
//- (void)_promptAndSaveToGallery;
//- (void)_savePressed;
//- (void)_saveLongPressed:(id)arg1;
//- (void)_saveToGalleryWithOverrideToCameraRoll:(_Bool)arg1 isPrivate:(_Bool)arg2 fromLongPressPrompt:(_Bool)arg3;
//- (void)_saveToSnapchatGalleryManualSave:(_Bool)arg1 saveToCameraRoll:(_Bool)arg2 showsSavingIndicator:(_Bool)arg3 isPrivate:(_Bool)arg4 savingSource:(long long)arg5 saveAsSeparateCopy:(_Bool)arg6 mobStoryPublication:(id)arg7;
//- (void)_logAndSaveToGalleryManualSave:(_Bool)arg1 autosaveToMyStoryEntry:(_Bool)arg2 saveToCameraRoll:(_Bool)arg3 showsSavingIndicator:(_Bool)arg4 isPrivate:(_Bool)arg5 saveAsSeparateCopy:(_Bool)arg6 savingSource:(long long)arg7 mobStoriesToAutosave:(id)arg8;
//- (void)_saveSnapToSnapAlbumWithPreviewBlob:(id)arg1 saveSessionId:(id)arg2;
//- (void)_saveSnapToSnapAlbumWithSaveSessionId:(id)arg1;
//- (void)_saveToCameraRollOnlyWithSavingSource:(long long)arg1;
//- (void)_configureSendPreviewModelWithCompletion:(CDUnknownBlockType)arg1;
//- (id)_newSendToConfiguration;
//- (id)_snappableFriendArray;
//- (void)_presentSendToView;
//- (void)_sendWithSendToViewRequired:(_Bool)arg1;
//- (void)_setGeofilterAttachmentUrlIfNeededToEphemeralMediaList;
//- (void)_sendEphemeralMediaWithShouldPresentSendToView:(_Bool)arg1;
//- (void)_sendChatMediaWithShouldPresentSendToView:(_Bool)arg1;
//- (void)_generateSharedMessageMediaToUpload;
//- (void)_sendSnap;
//- (void)_sendPressed;
//- (void)_audioPressed;
//- (void)requestToUseLocation;
//- (void)userDeniedLocationPermissions;
//- (void)userPostponedLocationPermissions;
//- (void)prepareToRequestToUseLocation;
//- (_Bool)shouldRequestToUseLocation;
//- (id)_makeHelpLabel:(id)arg1;
//- (void)_setupHintLabels;
//- (void)_hideHelpLabels;
//- (void)_setupHelpLabels;
//- (_Bool)_showAudioOn;
//- (id)createCropOverlayView;
//- (id)createDrawingView;
//- (_Bool)shouldPopToRootViewControllerLater;
//- (_Bool)shouldPopToRootViewController;
//- (void)dealloc;
//- (_Bool)shouldDisplayStatusBar;
//- (void)tearDownQuickSend;
//- (void)_updateAttachmentToolBarAttachmentStatus;
//- (void)_didDeattachUrlWithData:(id)arg1;
//- (void)_didAttachUrl:(id)arg1 extraData:(id)arg2;
//- (void)searchResultsViewController:(id)arg1 didOverscrollWithOffset:(double)arg2;
//- (void)searchResultsViewController:(id)arg1 didCancelWithDismissActionType:(long long)arg2;
//- (void)_checkAndShiftViewOutOfToolbar:(id)arg1;
//- (void)_updateForMusicItem:(_Bool)arg1;
//- (void)_updateMusicItemSelectionStyle;
//- (void)_updateForCropItem:(_Bool)arg1;
//- (void)_updateForTimerItem:(_Bool)arg1;
//- (void)_updateForImageTimerItem:(_Bool)arg1;
//- (void)_updateForVideoTimerItem:(id)arg1;
//- (void)initializeLensViewController;
//- (void)activateHiddenLensViewControllerWithLens:(id)arg1;
//- (void)_activateFirstLensIfNeeded;
//- (void)_presentLensViewController:(_Bool)arg1 sourceView:(id)arg2;
//- (void)_updateForSnapcraftItem:(_Bool)arg1;
//- (void)_updateForFacecraftItem:(_Bool)arg1;
//- (void)_updateFilterMenu:(long long)arg1;
//- (_Bool)_filterMenuSupportedInPreview;
//- (void)_updateForStickerItem:(_Bool)arg1 withCategory:(long long)arg2 isSingleCategoryMode:(_Bool)arg3;
//- (void)_updateForCaptionItem:(_Bool)arg1;
//- (void)_updateForDrawItem:(_Bool)arg1;
//- (void)_updateForAttachmentItem:(_Bool)arg1;
//- (void)_longPressTimer:(id)arg1;
//- (void)changePreviewCenterTooltipScale:(double)arg1;
//- (void)changePreviewCenterTooltipAlpha:(double)arg1;
//- (void)previewToolBar:(id)arg1 didLongPressItem:(id)arg2 gesture:(id)arg3;
//- (void)previewToolBar:(id)arg1 itemDidChangeSelectedState:(id)arg2;
//- (void)_closeToolbarSelectedItem;
//- (void)_closeLensCarouselIfNecessary;
//- (void)_closeFilterStackingToolIfNecessary;
//- (void)_openToolbarItemType:(long long)arg1;
//- (struct CGRect)_toolbarFrame;
//- (void)_toolbarButtonTapped:(id)arg1;
//- (_Bool)_shouldShowToolbarMusic;
//- (_Bool)_shouldShowLensButton;
//- (_Bool)_shouldShowToolbarAttachment;
//- (_Bool)_shouldShowToolbarTimer;
//- (_Bool)_enableSnapCrop;
//- (_Bool)_shouldShowFaceCraftButton;
//- (_Bool)_shouldShowSnapCraftButton;
//- (_Bool)_shouldShowPixelationButton;
//- (_Bool)_shouldShowPurikuraButton;
//- (_Bool)_shouldShowBrushButton;
//- (_Bool)_shouldShowAudioFilterButton;
//- (_Bool)_shouldShowBlurButton;
//- (_Bool)_shouldShowEraseButton;
//- (_Bool)_shouldShowCutButton;
//- (void)_addLensesButtonToToolbarIfNeeded;
//- (void)_addFaceCraftButtonToToolbarIfNeeded;
//- (void)_checkIfImageContainsFace;
//- (_Bool)_shouldShowMultiSnapView;
//- (long long)_savingGallerySnapCount;
//- (id)_getSaveSessionIdWithSavingSource:(long long)arg1 saveToGallery:(_Bool)arg2 saveToCameraRoll:(_Bool)arg3;
//- (void)_setupSendButton;
//- (void)_setupSnapAttachments;
//- (void)_setupToolbar;
//- (void)_setupQuickSend;
//- (struct CGRect)_bottomGradientFrame;
//- (struct CGRect)_rightGradientFrame;
//- (void)setupGradients;
//- (void)_updateBitmojiPackagesWithChatGroup:(id)arg1 target:(long long)arg2;
//- (void)_hideSpinner;
//- (void)_showSpinner;
//- (void)_enableFilterStackingUIIfNeeded;
//- (void)_setStickersState:(id)arg1;
- (UIImageView *)imageView;
//- (void)cancelPreview;
//- (void)dismissSend;
//- (struct CGRect)contentRect;
//- (id)getPageViewParams;
//- (id)getPageViewName;
//- (void)willBecomeActive;
//- (void)willResignActive;
//- (void)_setupSnapSenderConfiguration:(id)arg1;
//- (void)_setupFlags:(id)arg1;
//- (void)_setupWithFullscreenImage;
//- (void)_displayFullscreenImage;
//- (void)_runToolbarTooltipAnimations;
//- (void)previewAnimationDidFinish;
//- (id)initWithConfiguration:(id)arg1;
//- (void)removeListener:(id)arg1;
//- (void)addListener:(id)arg1;
//- (id)_showAssetChangesSaveProgress;
//- (id)cloudSyncTriggerSourceWithSavingSource:(long long)arg1;
//- (void)replaceMultiSnapsV2WithOverlayFormats:(id)arg1 overlays:(id)arg2 timeRanges:(id)arg3 gallerySavingEventId:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
//- (void)replaceMultiSnapsWithOverlayFormats:(id)arg1 overlays:(id)arg2 gallerySavingEventId:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
//- (void)updateGalleryConfigurationWithSnaps:(id)arg1 entry:(id)arg2 timeRanges:(id)arg3;
//- (void)updateGalleryConfigurationWithSnap:(id)arg1 entryId:(id)arg2 cloudFS:(id)arg3;
//- (void)saveAssetChangesAsNewCopy:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
//- (id)drawingViewAsImage;
//- (void)insertSticker:(id)arg1 image:(id)arg2 center:(struct CGPoint)arg3 height:(double)arg4 rotation:(double)arg5 alternatives:(id)arg6;
//- (void)insertSticker:(id)arg1 center:(struct CGPoint)arg2 height:(double)arg3 rotation:(double)arg4 alternatives:(id)arg5;
//- (_Bool)shouldBeSilentlyPresentedAndPauseOpera;
//- (void)loggingEndTimeMultiSnapV2SegmentSwitchFromIndex:(long long)arg1 toIndex:(long long)arg2 creativeToolType:(id)arg3;
//- (void)loggingStartTimeMultiSnapV2SegmentSwitchFromIndex:(long long)arg1 toIndex:(long long)arg2 creativeToolType:(id)arg3;
//- (void)removeCustomVolumeView;
//- (void)addCustomVolumeViewShouldOverrideMute:(_Bool)arg1;
//- (void)setupCustomVolumeView;
//- (void)setupSnapVideoFilter:(id)arg1;
//- (void)getVideoForSnapSaver:(id)arg1 completion:(CDUnknownBlockType)arg2;
//- (void)getImageForSnapSaver:(id)arg1 completion:(CDUnknownBlockType)arg2;
//- (id)videoTrackedImagesWithCroppingAspectRatio:(double)arg1;
//- (void)getMultiSnapThumbnailsWithCompletion:(CDUnknownBlockType)arg1;
//- (void)multiSnapV2EditedThumbnailsAtIndex:(long long)arg1 completion:(CDUnknownBlockType)arg2;
//- (id)_geofilterPngDataIfOnlyDrawnFilterAndFitsScreen:(struct CGSize)arg1;
//- (void)getScreenshotAsynchronouslyWithOriginalImageIncluded:(_Bool)arg1 filteredImageIncluded:(_Bool)arg2 videoOverlayImageIncluded:(_Bool)arg3 captionIncluded:(_Bool)arg4 filterOverlayImageIncluded:(_Bool)arg5 shouldGenerateOverlayImageForMask:(_Bool)arg6 shouldGenerateVideoThumbnailImageWithOverlay:(_Bool)arg7 croppingAspectRatio:(double)arg8 callbackQueue:(id)arg9 completionBlock:(CDUnknownBlockType)arg10;
//- (void)getScreenshotAsynchronouslyWithOriginalImageIncluded:(_Bool)arg1 filteredImageIncluded:(_Bool)arg2 videoOverlayImageIncluded:(_Bool)arg3 captionIncluded:(_Bool)arg4 filterOverlayImageIncluded:(_Bool)arg5 shouldGenerateOverlayImageForMask:(_Bool)arg6 shouldGenerateVideoThumbnailImageWithOverlay:(_Bool)arg7 callbackQueue:(id)arg8 completionBlock:(CDUnknownBlockType)arg9;
//- (void)getOverlayImageForVideoMediaAsynchronouslyShouldGenerateVideoThumbnailImageWithOverlay:(_Bool)arg1 croppingAspectRatio:(double)arg2 callbackQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
//- (void)getOverlayAndVideoTrackedImagesWithCroppingAspectRatio:(double)arg1 completion:(CDUnknownBlockType)arg2;
//- (void)getOverlayAndVideoTrackedImagesWithCompletion:(CDUnknownBlockType)arg1;
//- (void)getScreenshotAsynchronouslyWithCallbackQueue:(id)arg1 croppingAspectRatio:(double)arg2 completionBlock:(CDUnknownBlockType)arg3;
//- (void)getScreenshotAsynchronouslyWithCallbackQueue:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
//- (void)pressDidBeginOnButton:(id)arg1;
//
//// Remaining properties
//@property(readonly, copy) NSString *debugDescription;
//@property(readonly, copy) NSString *description;
//@property(readonly) unsigned long long hash;
//@property(readonly) Class superclass;

@end

