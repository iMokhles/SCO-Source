//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIKit.h>

//#import "SCActionSheetDelegate-Protocol.h"
//#import "SCBaseMediaOperaPresenterDelegate-Protocol.h"
//#import "SCChatCellParentViewControllerDelegate-Protocol.h"
//#import "SCChatHamburgerTableSectionOneOnOneSettingDelegate-Protocol.h"
//#import "SCChatHandleNotificationProtocol-Protocol.h"
//#import "SCChatSideMenuLifeCycleListener-Protocol.h"
//#import "SCChatUIProvider-Protocol.h"
//#import "SCChatURLMediaOperaPresenterDelegate-Protocol.h"
//#import "SCChatViewHeaderDataSource-Protocol.h"
//#import "SCChatVisibilityProvider-Protocol.h"
//#import "SCContextOperaPlaylistPluginDelegate-Protocol.h"
//#import "SCHamburgerAnimationDelegte-Protocol.h"
//#import "SCMiniProfileViewControllerDelegate-Protocol.h"
//#import "SCSearchStoriesPresenterDelegate-Protocol.h"
//#import "SCSharedStoryMiniProfilePresenterDelegate-Protocol.h"
//#import "SCSharedStoryPresenterDelegate-Protocol.h"
//#import "SCTPresencePillTapListener-Protocol.h"
//#import "SCTV3ClientDependenciesProvider-Protocol.h"
//#import "SCTableControllerInsetUpdater-Protocol.h"
//#import "UIViewControllerTransitioningDelegate-Protocol.h"
//
//@class NSString, SCActionMenuShareController, SCAppNotification, SCChatCardAnimationContainerView, SCChatHamburgerAnimator, SCChatInputController, SCChatViewHeader, SCChatViewLifeCycleListenerAnnouncer, SCChatViewLogger, SCMiniProfileViewController, SCTV3TableContentInsetUpdater, UIView;
//@protocol NavigationDelegate, SCCardAnimationViewProtocol, SCChatViewControllerParentDelegate, SCReplyDelegate, SCStackChatsDelegate, SCStartChatDelegate, SCTalkClientController, SCV3BubbleChatController;

@interface SCChatBaseViewController : UIViewController
//<SCChatCellParentViewControllerDelegate, SCChatViewHeaderDataSource, SCChatUIProvider, SCSharedStoryPresenterDelegate, SCChatSideMenuLifeCycleListener, SCSharedStoryMiniProfilePresenterDelegate, SCBaseMediaOperaPresenterDelegate, SCSearchStoriesPresenterDelegate, SCChatURLMediaOperaPresenterDelegate, SCTV3ClientDependenciesProvider, UIViewControllerTransitioningDelegate, SCMiniProfileViewControllerDelegate, SCChatVisibilityProvider, SCChatHamburgerTableSectionOneOnOneSettingDelegate, SCTableControllerInsetUpdater, SCTPresencePillTapListener, SCContextOperaPlaylistPluginDelegate, SCActionSheetDelegate, SCHamburgerAnimationDelegte, SCChatHandleNotificationProtocol>
//{
//    UIView *_recipientBar;
//    UIView *_blurOverlay;
//    _Bool _isChatViewCentered;
//    _Bool _isOperaShowing;
//    double _lastVerticalTranslateUp;
//    SCTV3TableContentInsetUpdater *_tableContentInsetUpdater;
//    _Bool _deferAllSystemEdgeGestures;
//    long long _transitionState;
//    SCChatHamburgerAnimator *_hamburgerAnimator;
//    UIView *_blueOverlay;
//    UIView *_blueUnderlay;
//    SCActionMenuShareController *_actionMenuShareController;
//    _Bool _isInPreviewMode;
//    _Bool _ignoreScreenshot;
//    _Bool _ignoreScreenRecord;
//    _Bool _handleLifecycleWhenCentered;
//    id <SCChatViewControllerParentDelegate> _parentDelegate;
//    UIView *_containerView;
//    UIView *_presenceContainer;
//    id <SCTalkClientController> _talkClientController;
//    id <SCV3BubbleChatController> _bubbleChatController;
//    id <SCStartChatDelegate> _delegate;
//    id <NavigationDelegate> _navigationDelegate;
//    id <SCReplyDelegate> _replyDelegate;
//    SCAppNotification *_sourceNotification;
//    id <SCStackChatsDelegate> _stackChatsDelegate;
//    SCChatViewLogger *_lifecycleLogger;
//    UIView<SCCardAnimationViewProtocol> *_tableContainerView;
//    SCChatViewHeader *_header;
//    SCChatInputController *_chatInputController;
//    SCMiniProfileViewController *_miniProfileViewController;
//    SCChatCardAnimationContainerView *_contentContainerView;
//    SCChatViewLifeCycleListenerAnnouncer *_lifeCycleAnnouncer;
//}
//
//+ (id)stringForStatusBarActionSource:(long long)arg1;
//@property(retain, nonatomic) SCChatViewLifeCycleListenerAnnouncer *lifeCycleAnnouncer; // @synthesize lifeCycleAnnouncer=_lifeCycleAnnouncer;
//@property(retain, nonatomic) SCChatCardAnimationContainerView *contentContainerView; // @synthesize contentContainerView=_contentContainerView;
//@property(readonly, nonatomic) SCMiniProfileViewController *miniProfileViewController; // @synthesize miniProfileViewController=_miniProfileViewController;
//@property(retain, nonatomic) SCChatInputController *chatInputController; // @synthesize chatInputController=_chatInputController;
//@property(retain, nonatomic) SCChatViewHeader *header; // @synthesize header=_header;
//@property(retain, nonatomic) UIView<SCCardAnimationViewProtocol> *tableContainerView; // @synthesize tableContainerView=_tableContainerView;
//@property(nonatomic) _Bool handleLifecycleWhenCentered; // @synthesize handleLifecycleWhenCentered=_handleLifecycleWhenCentered;
//@property(nonatomic) _Bool ignoreScreenRecord; // @synthesize ignoreScreenRecord=_ignoreScreenRecord;
//@property(nonatomic) _Bool ignoreScreenshot; // @synthesize ignoreScreenshot=_ignoreScreenshot;
//@property(nonatomic) _Bool isInPreviewMode; // @synthesize isInPreviewMode=_isInPreviewMode;
//@property(retain, nonatomic) SCChatViewLogger *lifecycleLogger; // @synthesize lifecycleLogger=_lifecycleLogger;
//@property(nonatomic) __weak id <SCStackChatsDelegate> stackChatsDelegate; // @synthesize stackChatsDelegate=_stackChatsDelegate;
//@property(retain, nonatomic) SCAppNotification *sourceNotification; // @synthesize sourceNotification=_sourceNotification;
//@property(nonatomic) __weak id <SCReplyDelegate> replyDelegate; // @synthesize replyDelegate=_replyDelegate;
//@property(nonatomic) __weak id <NavigationDelegate> navigationDelegate; // @synthesize navigationDelegate=_navigationDelegate;
//@property(nonatomic) __weak id <SCStartChatDelegate> delegate; // @synthesize delegate=_delegate;
//@property(retain, nonatomic) id <SCV3BubbleChatController> bubbleChatController; // @synthesize bubbleChatController=_bubbleChatController;
//@property(retain, nonatomic) id <SCTalkClientController> talkClientController; // @synthesize talkClientController=_talkClientController;
//@property(retain, nonatomic) UIView *presenceContainer; // @synthesize presenceContainer=_presenceContainer;
//@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
//@property(nonatomic) __weak id <SCChatViewControllerParentDelegate> parentDelegate; // @synthesize parentDelegate=_parentDelegate;
//- (void).cxx_destruct;
//- (void)_handleSourceNotificationIfNeeded;
//- (void)_showCameraForUsername:(id)arg1 doubleTap:(_Bool)arg2 context:(id)arg3;
//- (_Bool)_isPresentingMiniProfile;
//- (_Bool)handleNotificationDismissed:(id)arg1;
//- (_Bool)handleNotificationPressed:(id)arg1;
//- (_Bool)chatIsPartiallyVisible;
//- (_Bool)chatIsFullyVisible;
//- (void)presentMiniProfileForSnapchatter:(id)arg1 addSource:(long long)arg2 page:(long long)arg3 context:(id)arg4 completion:(CDUnknownBlockType)arg5;
//- (void)switchChatTo:(id)arg1 deepLinkURL:(id)arg2;
//- (void)switchChatTo:(id)arg1;
//- (void)hamburgerTableSectionOneOnOneSettingDidRemoveFriend:(id)arg1;
//- (void)hamburgerTableSectionOneOnOneSettingDidBlockFriend:(id)arg1;
//- (void)gotoSendMeSnapsSettingsViewWithAnimation:(_Bool)arg1;
//- (void)hamburgerTableSectionOneOnOneSettingDidUpdateUsername:(id)arg1;
//- (void)miniProfileViewControllerDidUpdateFriendStatus:(id)arg1 friend:(id)arg2;
//- (void)miniProfileViewControllerWasDismissed:(id)arg1;
//- (void)miniProfileViewControllerDidPressSnapButton:(id)arg1;
//- (void)miniProfileController:(id)arg1 wantsToNavigateToChatWithDeepLinkURL:(id)arg2;
//- (id)presentingVC;
//- (void)sideMenuDidDisappear;
//- (void)sideMenuDidAppear;
//- (void)sideMenuWillAppear;
//- (void)restoreViewAfterSideMenuDisappear;
//- (void)prepareSideMenuAppear;
//- (void)showSendToViewForForwardableViewModel:(id)arg1 userSession:(id)arg2;
//- (id)hamburgerRootViewControllerBackgroundView:(id)arg1;
//- (void)hamburgerRootViewController:(id)arg1 didAppearWithPercentage:(double)arg2;
//- (void)setChatEntryEvent:(long long)arg1;
//- (id)modalHamburgerViewController;
//- (id)animationControllerForDismissedController:(id)arg1;
//- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
//- (void)setHeaderButtonsAlpha:(double)arg1;
//- (id)headerView;
//- (void)resetTransitionState;
//- (void)prepareForJumpIn;
//- (void)actionSheetWillDisappear;
//- (void)actionSheetWillAppear;
//- (_Bool)shouldSuppressKeyboardFromNotBeingVisible;
//- (_Bool)isFullScreenPlayerShown;
//- (void)updateTableContentInset:(double)arg1;
//- (void)searchStoryPresenterDidFinishDismissingStory:(id)arg1;
//- (void)searchStoryPresenterWillBeginPresentingStory:(id)arg1;
//- (id)presentingViewControllerForSearchStoriesPresenter:(id)arg1;
//- (_Bool)isCustomPresentationForSearchStoriesPresenter:(id)arg1;
//- (void)baseMediaOperaPresenter:(id)arg1 resumedTimerForMessage:(id)arg2;
//- (void)baseMediaOperaPresenter:(id)arg1 pausedTimerForMessage:(id)arg2;
//- (void)_presentReportViewControllerWithReportType:(long long)arg1;
//- (void)baseMediaOperaPresenter:(id)arg1 didTapReportForMessage:(id)arg2 shareableMediaComponents:(id)arg3;
//- (void)baseMediaOperaPresenter:(id)arg1 didTapSendForMessage:(id)arg2;
//- (void)operaPresenterDidDisappear;
//- (void)operaPresenterWillAppear;
//- (void)operaURLMediaPresenterDidDisappear;
//- (void)operaURLMediaPresenterWillAppear;
//- (void)baseMediaOperaPresenter:(id)arg1 didTapFooterBarForMedia:(id)arg2;
//- (id)baseMediaOperaPresenter:(id)arg1 thumbnailViewForMedia:(id)arg2 conversationId:(id)arg3;
//- (void)cardWasTapped;
//- (void)contextViewControllerWillDismiss:(id)arg1;
//- (void)contextViewControllerWillPresent:(id)arg1;
//- (void)_setBlueUnderlayAlpha:(double)arg1;
//- (void)setBlueOverlayAlpha:(double)arg1;
//- (id)blueUnderlay;
//- (id)blueOverlay;
//- (id)tableView;
//- (void)hideBlurOverlay;
//- (void)showBlurOverlayOnView:(id)arg1;
//- (void)rightButtonPressed;
//- (void)leavePreviewMode:(_Bool)arg1;
//- (void)enterPreviewMode;
//- (void)didAttemptToSendMessage;
//- (void)removeRecipientBar:(_Bool)arg1;
//- (void)initInputView;
//- (void)addRecipientBar:(id)arg1;
//- (void)updateTableContainerViewTopConstraint;
//- (void)sharedStoryPresenterDidDisappear;
//- (void)sharedStoryPresenterWillAppear;
//- (void)sharedStoryMiniProfileDidDisappear;
//- (void)sharedStoryMiniProfileWillAppear;
//- (void)userDidScreenRecord;
//- (void)userDidTakeScreenshot;
//- (void)sccpConnectionStatusChanged;
//- (void)releaseMemory;
//- (void)viewWillEnterBackground;
//- (void)viewDidBecomeActive;
//- (void)viewWillResignActive;
//- (_Bool)isPlayingSnap;
//- (_Bool)isTalkRemoteVideoFullscreen;
//- (void)hideStatusBarFromActionSource:(long long)arg1;
//- (void)showStatusBarFromActionSource:(long long)arg1;
//- (void)chatInputControllerViewDidChange:(id)arg1;
//- (double)_chatHeaderVerticalTranslationUp;
//- (_Bool)isHeaderShown;
//- (id)chatRecipientUsername;
//- (id)imageForRightButtonInState:(unsigned long long)arg1;
//- (id)inputView;
//- (void)presencePillTapped:(id)arg1 username:(id)arg2 longPressed:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
//- (_Bool)shouldShowCallPrompt;
//- (_Bool)chatFullyVisibile;
//- (id)tableInsetUpdater;
//- (void)_updatePresenceContainerLayout;
//- (void)setupPresenceContainer;
//- (void)setActiveTalkSessionForConversationWithId:(id)arg1;
//- (id)_maskLayerWithRoundedCorner;
//- (id)conversationId;
//- (_Bool)canBeShown;
//- (_Bool)shouldDisableScrollOut:(id)arg1;
//- (void)viewDidPopFromStack;
//- (void)viewDidSwipeOut;
//- (void)viewDidSwipeIn;
//- (void)viewDidFullyDisappearFromStack:(_Bool)arg1;
//- (void)viewDidFullyAppearFromStack:(_Bool)arg1;
//- (void)prepareToBeVisible;
//- (void)_setPreferredScreenEdgesDeferringSystemGesturesToAll:(_Bool)arg1;
//- (unsigned long long)preferredScreenEdgesDeferringSystemGestures;
//- (_Bool)shouldSuppressKeyboard;
//- (_Bool)shouldShowGreetingSticker;
//- (void)viewDidAppearAtOffset:(double)arg1;
//- (void)setupHeader;
//- (void)updateHeaderForPreviewMode;
//- (void)updateContentContainerViewTopConstraint;
//- (void)_setContentContainerViewRoundedCorner;
//- (void)_initContentContainerView;
//- (void)_initTableContentInsetUpdater;
//- (void)viewDidLayoutSubviews;
//- (id)shortDescription;
//- (void)viewDidLoad;
//- (void)loadView;
//- (id)getPageViewName;
//- (id)initWithUserSession:(id)arg1 parentDelegate:(id)arg2;
//
//// Remaining properties
//@property(readonly, copy) NSString *debugDescription;
//@property(readonly, copy) NSString *description;
//@property(readonly) unsigned long long hash;
//@property(readonly) Class superclass;

@end

