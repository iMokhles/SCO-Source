//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 20 2017 17:44:06).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SCOEditGroupViewController.h"
#import "Manager.h"
#import <objc/runtime.h>
#import "SCAppDelPrefs.h"
#import "Friend.h"
#import "PureLayout.h"

@implementation SCOEditGroupViewController

- (id)initWithGroup:(id)arg1 saveBlock:(void (^)(SCOGroup *group))arg2 {
  SCOEditGroupViewController *editGroupVC = [[SCOEditGroupViewController alloc] initWithStyle:0];
  if (editGroupVC) {
    [editGroupVC setEditingGroup:(arg1 != nil)];
    if (!arg1) {
      arg1 = [SCOGroup newGroup];
    }
    [editGroupVC setGroup:arg1];

    NSArray *friends = [[self group] friends];
    NSMutableArray *newArray1 = [NSMutableArray arrayWithArray:friends];
    [editGroupVC setSelectedUsernames:newArray1];
    [editGroupVC setSaveBlock:arg2];

  }
  return editGroupVC;
}
- (void)viewDidLoad {
  [super viewDidLoad];

  NSArray *allFriends = (NSArray *)[[[objc_getClass("Manager") shared] user] friends];
  [self setAllFriends:allFriends];

  NSArray *sortDescriptors = [NSArray arrayWithObject:[NSSortDescriptor sortDescriptorWithKey:@"nameToDisplay" ascending:YES]];
  NSArray *filtersArraySorted = [[self allFriends] sortedArrayUsingDescriptors:sortDescriptors];
[self setAllFriends:filtersArraySorted];
    
  NSString *titleString = nil;
  if ([self editingGroup]) {
    titleString = [[SCAppDelPrefs sharedInstance] localizedStringForKey:@"EDIT_GROUP"];
  } else {
    titleString = [[SCAppDelPrefs sharedInstance] localizedStringForKey:@"NEW_GROUP"];
  }
  [self setTitle:titleString];

  [self.navigationItem setRightBarButtonItem:[[UIBarButtonItem alloc] initWithBarButtonSystemItem:3 target:self action:@selector(saveButtonPressed)]];
  [self.tableView setSeparatorColor:[UIColor redColor]];

}
- (void)viewWillAppear:(_Bool)arg1 {
  [super viewWillAppear:arg1];

  [self.navigationController.navigationBar setBarTintColor:[UIColor whiteColor]];
  [self.navigationController.navigationBar setTintColor:[UIColor greenColor]];
  [self.navigationController.navigationBar setTitleTextAttributes:@{NSForegroundColorAttributeName: [UIColor redColor]}];

}

- (void)saveButtonPressed {

  [self.group setTitle:self.textfield.text];
  [self.group setFriends:self.selectedUsernames];

  if (self.saveBlock) {
    self.saveBlock(self.group);
  }
  [self.navigationController popViewControllerAnimated:YES];
}

- (long long)numberOfSectionsInTableView:(UITableView *)arg1 {
  return 2;
}
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2 {
  if (arg2 == 1) {
    return [[self allFriends] count];
  }
  return 0;
}
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2 {
  UIView *newView = [UIView new];
  UILabel *headerLabel = [[UILabel alloc] initWithFrame:self.view.frame];
  [headerLabel setFont:[UIFont fontWithName:@"AvenirNext-DemiBold" size:11.0]];
  [headerLabel setTextColor:[UIColor redColor]];
  [newView addSubview:headerLabel];

  NSString *titleString = nil;
  if (arg2 == 1) {
    titleString = [[SCAppDelPrefs sharedInstance] localizedStringForKey:@"FRIENDS"];
  } else {
    titleString = [[SCAppDelPrefs sharedInstance] localizedStringForKey:@"GROUP_NAME"];
  }
  [headerLabel setText:titleString];

  return newView;
}
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2 {
  return 25.0;
}
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2 {
  if ([arg2 section] == 1) {
    static NSString *identifier = @"SCOFriendCell";
    UITableViewCell *cell = [arg1 dequeueReusableCellWithIdentifier:identifier];
    if (cell == nil) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifier];
    }

    Friend *friend = [[self allFriends] objectAtIndex:arg2.row];
    [cell.textLabel setText:friend.nameToDisplay];
    [cell.detailTextLabel setText:friend.name];
    [cell.detailTextLabel setTextColor:[UIColor redColor]];

    if ([[self selectedUsernames] containsObject:friend.name]) {
      [cell setAccessoryType:3];
    } else {
      [cell setAccessoryType:0];
    }
    return cell;
  } else {

    static NSString *identifier = @"SCOTextFieldCell";
    UITableViewCell *cell = [arg1 dequeueReusableCellWithIdentifier:identifier];
    if (cell == nil) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifier];

        UITextField *textField1 = [[cell contentView] viewWithTag:419];
        if (!textField1) {
          textField1 = [[UITextField alloc] initWithFrame:CGRectZero];
          [textField1 setTag:419];
          [textField1 setPlaceholder:[[SCAppDelPrefs sharedInstance] localizedStringForKey:@"NAME"]];
          [textField1 setDelegate:self];
          [textField1 setReturnKeyType:9];
          [[cell contentView] addSubview:textField1];
          [textField1 autoPinEdgeToSuperviewEdge:3];
          [textField1 autoPinEdgeToSuperviewEdge:4];
          [textField1 autoPinEdgeToSuperviewEdge:2 withInset:15.0];
          [textField1 autoPinEdgeToSuperviewEdge:1 withInset:15.0];
        }
        [self setTextfield:textField1];
        [self.textfield setText:self.group.title];
    }
    return cell;
  }
}
- (_Bool)textFieldShouldReturn:(UITextField *)arg1 {
  [arg1 resignFirstResponder];
  return YES;
}
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2 {
  [arg1 deselectRowAtIndexPath:arg2 animated:NO];
  if ([arg2 section] == 1) {
    UITableViewCell *cell = [arg1 cellForRowAtIndexPath:arg2];

    Friend *friend = [[self allFriends] objectAtIndex:arg2.row];
    if ([[self selectedUsernames] containsObject:friend.name]) {
      [[self selectedUsernames] removeObject:friend];
      [cell setAccessoryType:0];
    } else {
      [[self selectedUsernames] addObject:friend];
      [cell setAccessoryType:3];
    }
  }
}
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 {
  if ([arg1 respondsToSelector:@selector(setSeparatorInset:)]) {
    [arg1 setSeparatorInset:UIEdgeInsetsZero];
  } else if ([arg1 respondsToSelector:@selector(setLayoutMargins:)]) {
    [arg1 setLayoutMargins:UIEdgeInsetsZero];
  }
}
- (void)viewDidLayoutSubviews {
  [super viewDidLayoutSubviews];
  if ([self.tableView respondsToSelector:@selector(setSeparatorInset:)]) {
    [self.tableView setSeparatorInset:UIEdgeInsetsZero];
  } else if ([self.tableView respondsToSelector:@selector(setLayoutMargins:)]) {
    [self.tableView setLayoutMargins:UIEdgeInsetsZero];
  }
}
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1 {
  return UIInterfaceOrientationIsPortrait(arg1);
}
@end
